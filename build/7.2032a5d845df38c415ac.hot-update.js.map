{"version":3,"file":"7.2032a5d845df38c415ac.hot-update.js","sources":["webpack:///src/components/SubmitDealDialogBox/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport Dialog, {\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  withMobileDialog,\n} from 'material-ui/Dialog';\nimport Snackbar from 'material-ui/Snackbar';\nimport IconButton from 'material-ui/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from 'material-ui/Divider';\nimport { withStyles } from 'material-ui/styles';\nimport Button from 'material-ui/Button';\nimport classnames from 'classnames';\nimport SubmitDealForm from '../../containers/SubmitDealForm';\n\nconst networkErrorMessage = \"We're sorry. There was an error processing your request.\";\n\nconst styles = theme => ({\n  paper: {\n    width: '800px',\n    maxWidth: '800px',\n  },\n  dialogActions: {\n    margin: '8px 0',\n  },\n  formTitle: {\n    padding: 'theme.spacing.unit theme.spacing.unit * 3',\n    textAlign: 'center',\n  },\n  formSubheader: {\n    paddingLeft: theme.spacing.unit * 4,\n    paddingRight: theme.spacing.unit * 4,\n    marginBottom: theme.spacing.unit * 6,\n    marginTop: theme.spacing.unit * 2,\n    textAlign: 'center',\n  },\n  dialogContent: {\n    paddingTop: '32px',\n  },\n  snackBar: {\n    position: 'absolute',\n    bottom: 20,\n  },\n  errorSnackbar: {\n    '& > div': {\n      backgroundColor: theme.palette.secondary.main,\n    },\n  },\n});\n\n@observer\nclass SubmitDealDialogBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formApi: null,\n      formSubmitted: false,\n      snackbarOpen: false,\n      snackbarText: '',\n      snackbarUndoFunction: null,\n      isErrorSnackbar: false,\n    };\n  }\n\n  setFormSubmitted = (bool = true) => {\n    this.setState({ formSubmitted: bool });\n  };\n\n  toggleSnackbarOpen = text => {\n    this.setState({\n      snackbarOpen: true,\n      snackbarText: text,\n    });\n  };\n\n  handleCloseSnackbar = () => {\n    this.setState({\n      snackbarOpen: false,\n      snackbarUndoFunction: null,\n      isErrorSnackbar: false,\n      snackbarText: '',\n    });\n  };\n\n  openRequestErrorSnackbar = (text = networkErrorMessage) => {\n    this.setState({\n      snackbarOpen: true,\n      snackbarText: text,\n      isErrorSnackbar: true,\n    });\n  };\n\n  render() {\n    const {\n      fullScreen,\n      classes,\n      toggleDialogBoxOpen,\n      submitDealDialogOpen,\n      setDealSuccessfullySubmitted,\n    } = this.props;\n\n    return (\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        open={submitDealDialogOpen}\n        classes={{ paper: classes.paper }}\n        fullScreen={fullScreen}\n      >\n        <DialogTitle\n          id=\"form-dialog-title\"\n          classes={{ root: classes.formTitle }}\n        >\n          New Deal\n        </DialogTitle>\n        <Divider />\n        <DialogContent classes={{ root: classes.dialogContent }}>\n          <SubmitDealForm\n            userUUID={this.props.userUUID}\n            getFormApi={formApi => this.setState({ formApi })}\n            setFormSubmitted={this.setFormSubmitted}\n            setDealSuccessfullySubmitted={setDealSuccessfullySubmitted}\n            openRequestErrorSnackbar={this.openRequestErrorSnackbar}\n          />\n          <Snackbar\n            classes={{\n              root: classnames(\n                classes.snackBar,\n                this.state.isErrorSnackbar && classes.errorSnackbar\n              ),\n            }}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'center',\n            }}\n            open={this.state.snackbarOpen}\n            autoHideDuration={this.state.isErrorSnackbar ? 8000 : 4000}\n            onClose={this.handleCloseSnackbar}\n            message={<span id=\"snackbar-id\">{this.state.snackbarText}</span>}\n            action={[\n              this.snackbarUndoFunction ? (\n                <Button\n                  key=\"undo\"\n                  color=\"secondary\"\n                  size=\"small\"\n                  onClick={() => {\n                    this.handleCloseSnackbar();\n                    if (\n                      this.state.snackbarUndoFunction\n                      && typeof snackbarUndoFunction === 'function'\n                    ) {\n                      this.snackbarUndoFunction();\n                    }\n                  }}\n                >\n                  UNDO\n                </Button>\n              ) : (\n                undefined\n              ),\n              <IconButton\n                key=\"close\"\n                aria-label=\"Close\"\n                color=\"inherit\"\n                className={classes.close}\n                onClick={this.handleCloseSnackbar}\n              >\n                <CloseIcon />\n              </IconButton>,\n            ]}\n          />\n        </DialogContent>\n        {!this.state.formSubmitted ? (\n          <DialogActions classes={{ root: classes.dialogActions }}>\n            <Button\n              disabled={this.state.formSubmitted}\n              onClick={toggleDialogBoxOpen}\n              color=\"primary\"\n            >\n              Cancel\n            </Button>\n            <Button\n              disabled={this.state.formSubmitted}\n              onClick={() => {\n                const errors = this.state.formApi.getError();\n                let errorCount;\n                console.log(this.state.formApi.getError());\n                if (errors) {\n                  errorCount = Object.keys(this.state.formApi.getError())\n                    .length;\n                }\n\n                if (errorCount) {\n                  this.toggleSnackbarOpen(\n                    `Please correct ${errorCount} form error${\n                      errorCount > 1 ? 's' : ''\n                    }`\n                  );\n                }\n\n                this.state.formApi.submitForm();\n              }}\n              color=\"primary\"\n            >\n              Submit\n            </Button>\n          </DialogActions>\n        ) : null}\n      </Dialog>\n    );\n  }\n}\n\nexport default withMobileDialog()(withStyles(styles)(SubmitDealDialogBox));\n\n\n\n// WEBPACK FOOTER //\n// src/components/SubmitDealDialogBox/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AADA;AA1BA;AAAA;AACA;AAiCA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AAAA;AAAA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AACA;AAFA;AAIA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAtCA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAUA;AACA;;;AA6BA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AADA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AA3CA;AAAA;AAAA;AAAA;AAAA;AAiDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AA6BA;;;;;;;;;;;AA/JA;AACA;AAiKA;AACA;AADA;;;;;;;;;;;;AAtMA;AAEA;AAkCA;;;;;;;;;;A","sourceRoot":""}