{"version":3,"file":"8.d7f2b31264e8dd17c428.hot-update.js","sources":["webpack:///src/containers/DealsWithGQLQuery.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from 'material-ui/styles';\nimport Button from 'material-ui/Button';\nimport Tooltip from 'material-ui/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport GraphIcon from '@material-ui/icons/Equalizer';\nimport { observer } from 'mobx-react';\nimport Snackbar from 'material-ui/Snackbar';\nimport IconButton from 'material-ui/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { DotLoader } from 'react-spinners';\nimport DealsTableContainer from './DealsTable';\nimport AdminDealsTableContainer from './AdminAreaDealsTableContainer';\nimport DealsSummarDialogBox from '../components/DealsSummarDialogBox';\nimport ViewDealDialogBox from '../components/ViewDealDialogBox';\n\nconst Loader = DotLoader;\n\nconst dealsQuery = gql`\n  query dealsByAgentID($uuid: String!) {\n    dealsByAgentID(uuid: $uuid) {\n      dealID\n      date\n      agentID\n      dealType\n      clientName\n      clientEmail\n      propertyAddress\n      city\n      state\n      managementOrCobrokeCompany\n      price\n      status\n      bonusPercentageAddedByAdmin\n      netAgentCommission\n      total\n    }\n  }\n`;\n\nconst adminDealsByAgentID = gql`\n  query dealsByAgentID($uuid: String!) {\n    dealsByAgentID(uuid: $uuid) {\n      dealID\n      date\n      agentName\n      agentType\n      leadSource\n      dealType\n      propertyAddress\n      state\n      city\n      apartmentNumber\n      managementOrCobrokeCompany\n      price\n      clientName\n      clientEmail\n      paymentsTotal\n      deductionsTotal\n      total\n      agentNotes\n      bonusPercentageAddedByAdmin\n      netAgentCommission\n      netCompanyCommission\n      deductionItems {\n        agentID\n        deductionType\n        agentID\n      }\n      status\n    }\n  }\n`;\n\nconst styles = theme => ({\n  addDealBtn: {},\n  dealsSummaryBtn: {\n    marginLeft: '25px',\n    backgroundColor: '#2995F3',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: '#2380D1',\n    },\n  },\n  wrapper: {\n    position: 'relative',\n  },\n  buttonsWrapper: {\n    display: 'flex',\n    marginBottom: '25px',\n    justifyContent: 'center',\n  },\n  snackBar: {\n    marginTop: 30,\n  },\n});\n\n@observer\nclass DealsWithGQLQuery extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      submitDealDialogOpen: false,\n      dealsSummaryDialogBoxOpen: false,\n      snackbarOpen: false,\n      snackbarText: '',\n      snackbarUndoFunction: null,\n      addedDeals: [],\n      dealsViewDialogBoxOpen: false,\n      viewingDealID: '',\n      viewingDealStatus: '',\n      deletedDealIDS: [],\n      userUUID: this.props.userUUID,\n      acceptedDealIDS: [],\n    };\n  }\n\n  toggleAddDealDialogBox = () => {\n    this.setState({ submitDealDialogOpen: !this.state.submitDealDialogOpen });\n  };\n\n  toggleDealsSummaryDialogBox = () => {\n    this.setState({\n      dealsSummaryDialogBoxOpen: !this.state.dealsSummaryDialogBoxOpen,\n    });\n  };\n\n  setDealSuccessfullySubmitted = newDeal => {\n    this.setState({\n      submitDealDialogOpen: false,\n      snackbarOpen: true,\n      snackbarText: 'Deal submitted successfully',\n      addedDeals: [...this.state.addedDeals, newDeal],\n    });\n  };\n\n  setDealSuccessfullyEditted = newDeal => {\n    const addedDeals = this.state.addedDeals.filter(\n      deal => deal.dealID !== newDeal.dealID\n    );\n    this.setState({\n      dealsViewDialogBoxOpen: false,\n      snackbarOpen: true,\n      snackbarText: 'Deal updated successfully',\n      addedDeals: [...addedDeals, newDeal],\n    });\n  };\n\n  handleCloseSnackbar = () => {\n    this.setState({\n      snackbarOpen: false,\n      snackbarUndoFunction: null,\n    });\n  };\n\n  openDealsViewDialogBox = (dealID, status) => {\n    this.setState({\n      dealsViewDialogBoxOpen: true,\n      viewingDealID: dealID,\n      viewingDealStatus: status,\n    });\n  };\n\n  closeDealsViewDialogBox = () => {\n    this.setState({\n      dealsViewDialogBoxOpen: false,\n      viewingDealID: '',\n      viewingDealStatus: '',\n    });\n  };\n\n  dealDeleted = dealID => {\n    this.setState({\n      snackbarOpen: true,\n      snackbarText: 'Deal deleted successfully!',\n      dealsViewDialogBoxOpen: false,\n      deletedDealIDS: [...this.state.deletedDealIDS, dealID],\n    });\n  };\n\n  dealAccepted = dealID => {\n    this.setState({\n      snackbarOpen: true,\n      snackbarText: 'Deal accepted successfully!',\n      dealsViewDialogBoxOpen: false,\n      acceptedDealIDS: [...this.state.acceptedDealIDS, dealID],\n    });\n  };\n\n  render() {\n    const { classes, userUUID, isAdmin } = this.props;\n    const {\n      submitDealDialogOpen,\n      dealsSummaryDialogBoxOpen,\n      dealsViewDialogBoxOpen,\n      viewingDealID,\n      viewingDealStatus,\n    } = this.state;\n    const {\n      toggleAddDealDialogBox,\n      toggleDealsSummaryDialogBox,\n      openDealsViewDialogBox,\n      closeDealsViewDialogBox,\n    } = this;\n\n    return (\n      <Query\n        query={isAdmin ? adminDealsByAgentID : dealsQuery}\n        variables={{ uuid: userUUID || this.state.userUUID }}\n        ssr={false}\n        fetchPolicy=\"cache-and-network\"\n      >\n        {({ loading, error, data }) => {\n          if (loading)\n            return (\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  height: 'calc(100vh - 110px)',\n                  boxShadow:\n                    '0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12)',\n                }}\n              >\n                <Loader color=\"#f44336\" loading />\n              </div>\n            );\n          const intDeals = {};\n\n          if (error) {\n            console.log(error);\n            return (\n              <div style={{ textAlign: 'center' }}>\n                We're sorry. There was an error processing your request.\n              </div>\n            );\n          }\n\n          const allDeals = [...data.dealsByAgentID, ...this.state.addedDeals];\n\n          allDeals.forEach(deal => {\n            intDeals[deal.dealID] = deal;\n          });\n\n          let uniqueDeals = [];\n\n          Object.keys(intDeals).forEach(key => {\n            uniqueDeals.push(intDeals[key]);\n          });\n\n          uniqueDeals = uniqueDeals\n            .filter(deal => !this.state.deletedDealIDS.includes(deal.dealID))\n            .map(deal => {\n              if (this.state.acceptedDealIDS.includes(deal.dealID)) {\n                return { ...deal, status: 'accepted' };\n              } else {\n                return deal;\n              }\n            });\n\n          console.log(uniqueDeals);\n\n          return (\n            <div\n              className={classes.wrapper}\n              style={{\n                paddingTop: !this.props.largeDealsSummaryBtn\n                  ? '10px'\n                  : 'initial',\n              }}\n            >\n              <div>\n                {this.props.largeDealsSummaryBtn && (\n                  <div className={classes.buttonsWrapper}>\n                    <Button\n                      variant=\"raised\"\n                      onClick={toggleDealsSummaryDialogBox}\n                      classes={{ root: classes.dealsSummaryBtn }}\n                    >\n                      <GraphIcon />\n                      Deals Summary\n                    </Button>\n                  </div>\n                )}\n                {isAdmin ? (\n                  <ViewDealDialogBox\n                    dealsViewDialogBoxOpen={dealsViewDialogBoxOpen}\n                    closeDealsViewDialogBox={closeDealsViewDialogBox}\n                    viewingDealID={viewingDealID}\n                    viewingDealStatus={viewingDealStatus}\n                    toggleSnackbarOpen={this.toggleSnackbarOpen}\n                    setDealSuccessfullySubmitted={\n                      this.setDealSuccessfullyEditted\n                    }\n                    userRole={this.props.userRole}\n                    deleteDeal={this.deleteDeal}\n                    dealAccepted={this.dealAccepted}\n                    dealDeleted={this.dealDeleted}\n                  />\n                ) : (\n                  <ViewDealDialogBox\n                    dealsViewDialogBoxOpen={dealsViewDialogBoxOpen}\n                    closeDealsViewDialogBox={closeDealsViewDialogBox}\n                    userUUID={userUUID}\n                    viewingDealID={viewingDealID}\n                    viewingDealStatus={viewingDealStatus}\n                    toggleSnackbarOpen={this.toggleSnackbarOpen}\n                    setDealSuccessfullySubmitted={\n                      this.setDealSuccessfullyEditted\n                    }\n                    userRole={this.props.userRole}\n                    dealDeleted={this.dealDeleted}\n                  />\n                )}\n              </div>\n              {this.props.isAdmin ? (\n                <AdminDealsTableContainer\n                  deals={uniqueDeals}\n                  openDealsViewDialogBox={openDealsViewDialogBox}\n                  toggleDealsSummaryDialogBox={toggleDealsSummaryDialogBox}\n                  isDealsWithGQLQuery\n                />\n              ) : (\n                <DealsTableContainer\n                  deals={uniqueDeals}\n                  openDealsViewDialogBox={openDealsViewDialogBox}\n                  toggleDealsSummaryDialogBox={toggleDealsSummaryDialogBox}\n                  isDealsWithGQLQuery\n                />\n              )}\n              <DealsSummarDialogBox\n                toggleDealsSummaryDialogBox={toggleDealsSummaryDialogBox}\n                dealsSummaryDialogBoxOpen={dealsSummaryDialogBoxOpen}\n                deals={uniqueDeals}\n                userUUID={userUUID}\n              />\n\n              <Snackbar\n                classes={{ root: classes.snackBar }}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'center',\n                }}\n                open={this.state.snackbarOpen}\n                autoHideDuration={4000}\n                onClose={this.handleCloseSnackbar}\n                message={\n                  <span id=\"snackbar-id\">{this.state.snackbarText}</span>\n                }\n                action={[\n                  this.snackbarUndoFunction ? (\n                    <Button\n                      key=\"undo\"\n                      color=\"secondary\"\n                      size=\"small\"\n                      onClick={() => {\n                        this.handleCloseSnackbar();\n                        if (\n                          this.state.snackbarUndoFunction &&\n                          typeof snackbarUndoFunction === 'function'\n                        ) {\n                          this.snackbarUndoFunction();\n                        }\n                      }}\n                    >\n                      UNDO\n                    </Button>\n                  ) : (\n                    undefined\n                  ),\n                  <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={this.handleCloseSnackbar}\n                  >\n                    <CloseIcon />\n                  </IconButton>,\n                ]}\n              />\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withStyles(styles)(DealsWithGQLQuery);\n\n\n\n// WEBPACK FOOTER //\n// src/containers/DealsWithGQLQuery.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAsBA;AACA;AAiCA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAlBA;AAAA;AACA;AAuBA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AACA;AADA;AAGA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BA;AACA;AACA;AACA;AACA;AAJA;AAMA;AApCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuCA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAhDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmDA;AACA;AACA;AAFA;AAIA;AAvDA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0DA;AACA;AACA;AACA;AAHA;AAKA;AA/DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkEA;AACA;AACA;AACA;AAHA;AAKA;AAvEA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0EA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAhFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmFA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAzFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAHA;AAiBA;AACA;;;AAyEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAggBA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAxCA;AAAA;AAAA;AAAA;AAAA;AA8CA;AAGA;;;;;;;;;;;AAlSA;AACA;AAoSA;AACA;AADA;;;;;;;;;;;;AAvXA;AAEA;AAsBA;AAkCA;AAwBA;;;;;;;;;;A","sourceRoot":""}