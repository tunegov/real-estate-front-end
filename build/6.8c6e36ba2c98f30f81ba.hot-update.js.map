{"version":3,"file":"6.8c6e36ba2c98f30f81ba.hot-update.js","sources":["webpack:///src/components/ViewDealDialogBox/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport Dialog, {\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  withMobileDialog,\n} from 'material-ui/Dialog';\nimport Snackbar from 'material-ui/Snackbar';\nimport IconButton from 'material-ui/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from 'material-ui/Divider';\nimport { withStyles } from 'material-ui/styles';\nimport Button from 'material-ui/Button';\nimport Menu from 'material-ui/Menu';\nimport classnames from 'classnames';\nimport MenuItem from 'material-ui/Menu/MenuItem';\nimport ViewDealForm from '../../containers/ViewDealForm';\nimport { agent, admin, superAdmin } from '../../constants/userTypes';\nimport acceptDeal from '../../effects/deals/acceptDeal';\nimport deleteDeal from '../../effects/deals/deleteDeal';\n\nconst networkErrorMessage = \"We're sorry. There was an error processing your request.\";\n\nconst styles = theme => ({\n  paper: {\n    width: '800px',\n    maxWidth: '800px',\n  },\n  dialogActions: {\n    margin: '8px 0',\n  },\n  formTitle: {\n    padding: 'theme.spacing.unit theme.spacing.unit * 3',\n    textAlign: 'center',\n  },\n  formSubheader: {\n    paddingLeft: theme.spacing.unit * 4,\n    paddingRight: theme.spacing.unit * 4,\n    marginBottom: theme.spacing.unit * 6,\n    marginTop: theme.spacing.unit * 2,\n    textAlign: 'center',\n  },\n  dialogContent: {\n    paddingTop: '32px',\n  },\n  editDealBtn: {\n    color: theme.custom.submitBlue.main,\n    '&:hover': {\n      backgroundColor: theme.custom.submitBlue.transparentLightBackground,\n    },\n  },\n  popupMenuTitle: {\n    outline: 'none',\n    padding: '12px 16px',\n    width: 'auto',\n    color: 'rgba(0, 0, 0, 0.87)',\n    height: '24px',\n    overflow: 'hidden',\n    fontSize: '1rem',\n    boxSizing: 'content-box',\n    fontWeight: '400',\n    lineHeight: '1.5em',\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    whiteSpace: 'nowrap',\n    paddingLeft: '16px',\n    textOverflow: 'ellipsis',\n    paddingRight: '16px',\n    borderBottom: '1px solid rgba(0,0,0,.1)',\n    pointerEvents: 'none',\n  },\n  menuItem: {\n    display: 'flex !important',\n    justifyContent: 'center !important',\n  },\n  menuItemDelete: {\n    display: 'flex !important',\n    justifyContent: 'center !important',\n    transition:\n      'background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms !important',\n    '&:hover': {\n      backgroundColor: `${theme.palette.secondary.light} !important`,\n      color: '#fff !important',\n    },\n  },\n  menuItemAccept: {\n    display: 'flex !important',\n    justifyContent: 'center !important',\n    transition:\n      'background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms !important',\n    '&:hover': {\n      backgroundColor: `${theme.custom.submitBlue.light} !important`,\n      color: '#fff !important',\n    },\n  },\n  snackBar: {\n    position: 'absolute',\n    bottom: 20,\n  },\n  errorSnackbar: {\n    '& > div': {\n      backgroundColor: theme.palette.secondary.main,\n    },\n  },\n});\n\n@observer\nclass SubmitDealDialogBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formApi: null,\n      formSubmitted: false,\n      snackbarOpen: false,\n      snackbarText: '',\n      snackbarUndoFunction: null,\n      isEditingDeal: false,\n      cancelAnchorEl: null,\n      acceptAnchorEl: null,\n      dealBonus: '',\n      submittingRequestToServer: false,\n      isErrorSnackbar: false,\n    };\n  }\n\n  setFormSubmitted = (bool = true) => {\n    this.setState({ formSubmitted: bool, isEditingDeal: false });\n  };\n\n  toggleSnackbarOpen = text => {\n    this.setState({\n      snackbarOpen: true,\n      snackbarText: text,\n    });\n  };\n\n  handleCloseSnackbar = () => {\n    this.setState({\n      snackbarOpen: false,\n      snackbarUndoFunction: null,\n      isErrorSnackbar: false,\n      snackbarText: '',\n    });\n  };\n\n  openRequestErrorSnackbar = (text = networkErrorMessage) => {\n    this.setState({\n      snackbarOpen: true,\n      snackbarText: text,\n      isErrorSnackbar: true,\n    });\n  };\n\n  toggleEditingDeal = bool => {\n    this.setState({\n      isEditingDeal:\n        typeof bool === 'boolean' ? bool : !this.state.isEditingDeal,\n    });\n  };\n\n  handleCancelMenuClick = event => {\n    this.setState({ cancelAnchorEl: event.currentTarget });\n  };\n\n  handleCancelMenuClose = () => {\n    this.setState({ cancelAnchorEl: null });\n  };\n\n  handleAcceptMenuClick = event => {\n    this.setState({ acceptAnchorEl: event.currentTarget });\n  };\n\n  handleAcceptMenuClose = () => {\n    this.setState({ acceptAnchorEl: null });\n  };\n\n  onBonusChange = ({ target }) => {\n    const dollarRegex = /^\\d*(\\.\\d*)?$/;\n    const val = target.value;\n\n    if (!dollarRegex.test(val)) return;\n\n    this.setState({\n      dealBonus: val,\n    });\n  };\n\n  resetDealBonus = () => {\n    this.setState({\n      dealBonus: '',\n    });\n  };\n\n  acceptDeal = dealID => {\n    const { dealBonus } = this.state;\n    this.toggleSubmittingRequestToServer(true);\n    acceptDeal(dealID, Number(dealBonus) ? Number(dealBonus) : undefined)\n      .then(res => {\n        this.toggleSubmittingRequestToServer(false);\n        if (res.error) {\n          this.openRequestErrorSnackbar(res.error);\n          return;\n        } if (res.userErrors.length) {\n          this.openRequestErrorSnackbar(res.userErrors[0]);\n          return;\n        }\n\n        this.props.dealAccepted(dealID);\n      })\n      .catch(err => {\n        this.openRequestErrorSnackbar();\n      });\n  };\n\n  deleteDeal = dealID => {\n    this.toggleSubmittingRequestToServer(true);\n    deleteDeal(dealID)\n      .then(res => {\n        this.toggleSubmittingRequestToServer(false);\n        if (res.error) {\n          this.openRequestErrorSnackbar(res.error);\n          return;\n        }\n\n        this.props.dealDeleted(dealID);\n      })\n      .catch(err => {\n        this.toggleSubmittingRequestToServer(true);\n        this.openRequestErrorSnackbar();\n      });\n  };\n\n  toggleSubmittingRequestToServer = (\n    bool = !this.state.submittingRequestToServer\n  ) => {\n    this.setState({\n      submittingRequestToServer: bool,\n      formSubmitted: bool,\n    });\n  };\n\n  render() {\n    const {\n      fullScreen,\n      classes,\n      closeDealsViewDialogBox,\n      dealsViewDialogBoxOpen,\n      setDealSuccessfullySubmitted,\n      viewingDealID,\n      viewingDealStatus,\n      isCoAgent,\n    } = this.props;\n\n    const { isEditingDeal, cancelAnchorEl, acceptAnchorEl } = this.state;\n    return (\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        open={dealsViewDialogBoxOpen}\n        classes={{ paper: classes.paper }}\n        fullScreen={fullScreen}\n      >\n        <DialogTitle\n          id=\"form-dialog-title\"\n          classes={{ root: classes.formTitle }}\n        >\n          View Deal\n        </DialogTitle>\n        <Divider />\n        <DialogContent classes={{ root: classes.dialogContent }}>\n          <ViewDealForm\n            userUUID={this.props.userUUID}\n            getFormApi={formApi => this.setState({ formApi })}\n            setFormSubmitted={this.setFormSubmitted}\n            setDealSuccessfullySubmitted={setDealSuccessfullySubmitted}\n            dealID={viewingDealID}\n            isEditingDeal={isEditingDeal}\n            isViewType\n            userRole={this.props.userRole}\n            dealAccepted={this.props.dealAccepted}\n            onBonusChange={this.onBonusChange}\n            dealBonus={this.state.dealBonus}\n            resetDealBonus={this.resetDealBonus}\n            submittingRequestToServer={this.state.submittingRequestToServer}\n            openRequestErrorSnackbar={this.openRequestErrorSnackbar}\n          />\n          <Snackbar\n            classes={{\n              root: classnames(\n                classes.snackBar,\n                this.state.isErrorSnackbar && classes.errorSnackbar\n              ),\n            }}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'center',\n            }}\n            open={this.state.snackbarOpen}\n            autoHideDuration={4000}\n            onClose={this.handleCloseSnackbar}\n            message={<span id=\"snackbar-id\">{this.state.snackbarText}</span>}\n            action={[\n              this.snackbarUndoFunction ? (\n                <Button\n                  key=\"undo\"\n                  color=\"secondary\"\n                  size=\"small\"\n                  onClick={() => {\n                    this.handleCloseSnackbar();\n                    if (\n                      this.state.snackbarUndoFunction\n                      && typeof snackbarUndoFunction === 'function'\n                    ) {\n                      this.snackbarUndoFunction();\n                    }\n                  }}\n                >\n                  UNDO\n                </Button>\n              ) : (\n                undefined\n              ),\n              <IconButton\n                key=\"close\"\n                aria-label=\"Close\"\n                color=\"inherit\"\n                className={classes.close}\n                onClick={this.handleCloseSnackbar}\n              >\n                <CloseIcon />\n              </IconButton>,\n            ]}\n          />\n        </DialogContent>\n        {!this.state.formSubmitted ? (\n          <DialogActions classes={{ root: classes.dialogActions }}>\n            <Button\n              disabled={this.state.formSubmitted}\n              onClick={() => {\n                this.toggleEditingDeal(false);\n                closeDealsViewDialogBox();\n              }}\n              color=\"primary\"\n            >\n              Cancel\n            </Button>\n            {(this.props.userRole === agent\n              && viewingDealStatus === 'pending')\n            || this.props.userRole === superAdmin\n            || this.props.userRole === admin ? (\n                <Button\n                  disabled={this.state.formSubmitted}\n                  onClick={this.handleCancelMenuClick}\n                  color=\"secondary\"\n                >\n                Delete\n                </Button>\n              ) : null}\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={cancelAnchorEl}\n              open={Boolean(cancelAnchorEl)}\n              onClose={this.handleCancelMenuClose}\n            >\n              <div className={classes.popupMenuTitle}>Are you sure?</div>\n              <MenuItem\n                classes={{ root: classes.menuItemDelete }}\n                onClick={() => {\n                  this.handleCancelMenuClose();\n                  this.deleteDeal(viewingDealID);\n                }}\n              >\n                Yes\n              </MenuItem>\n              <MenuItem\n                classes={{ root: classes.menuItem }}\n                onClick={this.handleCancelMenuClose}\n              >\n                No\n              </MenuItem>\n            </Menu>\n            {!isEditingDeal\n            && this.props.userRole === agent\n            && viewingDealStatus === 'pending'\n              && !isCoAgent ? (\n                <Button\n                  className={classes.editDealBtn}\n                  disabled={this.state.formSubmitted}\n                  onClick={() => this.toggleEditingDeal(true)}\n                  color=\"primary\"\n                >\n                Edit\n                </Button>\n              ) : null}\n            {(this.props.userRole === admin\n              || this.props.userRole === superAdmin)\n            && viewingDealStatus === 'pending' ? (\n                <Button\n                  className={classes.editDealBtn}\n                  disabled={this.state.formSubmitted}\n                  onClick={this.handleAcceptMenuClick}\n                  color=\"primary\"\n                >\n                Accept Deal\n                </Button>\n              ) : null}\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={acceptAnchorEl}\n              open={Boolean(acceptAnchorEl)}\n              onClose={this.handleAcceptMenuClose}\n            >\n              <div className={classes.popupMenuTitle}>Are you sure?</div>\n              <MenuItem\n                classes={{ root: classes.menuItemAccept }}\n                onClick={() => {\n                  this.handleAcceptMenuClose();\n                  this.acceptDeal(viewingDealID);\n                }}\n              >\n                Yes\n              </MenuItem>\n              <MenuItem\n                classes={{ root: classes.menuItem }}\n                onClick={this.handleAcceptMenuClose}\n              >\n                No\n              </MenuItem>\n            </Menu>\n            {isEditingDeal ? (\n              <Button\n                disabled={this.state.formSubmitted}\n                onClick={() => {\n                  const errors = this.state.formApi.getError();\n                  let errorCount;\n                  console.log(this.state.formApi.getError());\n                  if (errors) {\n                    errorCount = Object.keys(this.state.formApi.getError())\n                      .length;\n                  }\n\n                  if (errorCount) {\n                    this.toggleSnackbarOpen(\n                      `Please correct ${errorCount} form error${\n                        errorCount > 1 ? 's' : ''\n                      }`\n                    );\n                  }\n\n                  this.state.formApi.submitForm();\n                }}\n                color=\"primary\"\n              >\n                Submit\n              </Button>\n            ) : null}\n          </DialogActions>\n        ) : null}\n      </Dialog>\n    );\n  }\n}\n\nexport default withMobileDialog()(withStyles(styles)(SubmitDealDialogBox));\n\n\n\n// WEBPACK FOOTER //\n// src/components/ViewDealDialogBox/index.js"],"mappings":"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","sourceRoot":""}