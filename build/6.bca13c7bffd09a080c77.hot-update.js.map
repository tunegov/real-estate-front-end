{"version":3,"file":"6.bca13c7bffd09a080c77.hot-update.js","sources":["webpack:///src/containers/ViewDealForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { BounceLoader } from 'react-spinners';\nimport SubmitDealForm from '../components/forms/SubmitDealForm';\nimport getDealUploadsSignedURLS from '../effects/deals/getDealUploadsSignedURLS';\nimport uploadFile from '../effects/uploadFile';\nimport updateDeal from '../effects/deals/updateDeal';\nimport { capitalize } from '../utils/stringUtils';\nimport { admin, superAdmin } from '../constants/userTypes';\n\nconst Loader = BounceLoader;\n\nconst viewDealFormQuery = gql`\n  query viewDealForm($uuid: String!) {\n    viewDealForm(uuid: $uuid) {\n      formSelectItems\n      agents {\n        firstName\n        lastName\n        uuid\n      }\n      deal {\n        dealID\n        date\n        agentName\n        agentType\n        leadSource\n        dealType\n        propertyAddress\n        state\n        city\n        apartmentNumber\n        managementOrCobrokeCompany\n        price\n        clientName\n        clientEmail\n        paymentItems {\n          paymentType\n          checkOrTransactionNumber\n          amount\n        }\n        paymentsTotal\n        deductionItems {\n          deductionType\n          description\n          agentID\n          amount\n        }\n        deductionsTotal\n        total\n        agentNotes\n        agencyDisclosureForm\n        contractOrLeaseForms\n        agentPaymentType\n        ACHAccountNumber\n        ACHAccountBankRoutingNumber\n        fundsPaidBy\n        alreadyTurnedFundsIn\n        shouldSendApprovalTextMessageNotification\n        status\n        bonusPercentageAddedByAdmin\n        netAgentCommission\n        netCompanyCommission\n      }\n    }\n  }\n`;\n\n@observer\nclass ViewDealFormContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      paymentAmountItems: {},\n      deductionAmountItems: {},\n      paymentsTotal: 0,\n      deductionsTotal: 0,\n      total: 0,\n      contractOrLeaseForms: [],\n      agencyDisclosureForm: null,\n      permanentPaymentSubtractions: 0, // not submitted\n      permanentDeductionSubtractions: 0, // not submitted\n      choosingMgmtCoBrokeCompany: false,\n      newMgmtOrCobrokeCompany: '',\n      hasSetNewMgmtOrCobrokeCompany: false,\n      addedManagementCompanies: [],\n      uplodingFileProgress: 0,\n      isUploadingFile: false,\n      uplodingFileText: '',\n      filesUploadedSuccessfully: null,\n      formSubmissionBegun: false,\n      submittingFormToServer: false,\n      dealBonus: '0',\n    };\n  }\n\n  uploadItemsNum = 0;\n\n  itemsUploaded = 0;\n\n  paymentAmountChangeHandler = (id, value) => {\n    value = Number(value);\n    const paymentsTotal = this.getTotalPaymentsAmount({\n      id,\n      value: value || 0,\n    });\n    this.setState({\n      paymentAmountItems: {\n        ...this.state.paymentAmountItems,\n        [id]: value || 0,\n      },\n      paymentsTotal,\n      total: paymentsTotal - this.state.deductionsTotal,\n    });\n  };\n\n  deductionAmountChangeHandler = (id, value) => {\n    value = Number(value);\n    const deductionsTotal = this.getTotalDeductionsAmount({\n      id,\n      value: value || 0,\n    });\n    this.setState({\n      deductionAmountItems: {\n        ...this.state.deductionAmountItems,\n        [id]: value || 0,\n      },\n      deductionsTotal,\n      total: this.state.paymentsTotal - deductionsTotal,\n    });\n  };\n\n  getTotalPaymentsAmount = newItem => {\n    let total = 0;\n    const { paymentAmountItems, permanentPaymentSubtractions } = this.state;\n\n    Object.keys(paymentAmountItems)\n      .filter(itemID => (newItem ? itemID !== newItem.id : true))\n      .forEach(key => {\n        total += paymentAmountItems[key];\n      });\n\n    if (newItem && newItem.value) total += newItem.value;\n\n    return total - permanentPaymentSubtractions;\n  };\n\n  getTotalDeductionsAmount = newItem => {\n    let total = 0;\n    const { deductionAmountItems, permanentDeductionSubtractions } = this.state;\n\n    Object.keys(deductionAmountItems)\n      .filter(itemID => (newItem ? itemID !== newItem.id : true))\n      .forEach(key => {\n        total += deductionAmountItems[key];\n      });\n\n    if (newItem && newItem.value) total += newItem.value;\n\n    return total - permanentDeductionSubtractions;\n  };\n\n  subtractPaymentValueFromState = payment => {\n    const paymentsTotal = this.getTotalPaymentsAmount() - payment;\n\n    this.setState({\n      permanentPaymentSubtractions:\n        this.state.permanentPaymentSubtractions + payment,\n      paymentsTotal,\n      total: paymentsTotal - this.state.deductionsTotal,\n    });\n  };\n\n  subtractDeductionValueFromState = deduction => {\n    const deductionsTotal = this.getTotalDeductionsAmount() - deduction;\n\n    this.setState({\n      permanentDeductionSubtractions:\n        this.state.permanentDeductionSubtractions + deduction,\n      deductionsTotal,\n      total: this.state.paymentsTotal - deductionsTotal,\n    });\n  };\n\n  setAgencyDisclosureForm = file => {\n    this.setState({ agencyDisclosureForm: file });\n    if (!file) {\n      const uploadBtn = document.getElementById('agencyDisclosureUploadForm');\n      if (uploadBtn) {\n        uploadBtn.value = null;\n      }\n    }\n  };\n\n  setContractOrLeaseForms = filesObject => {\n    if (Array.isArray(filesObject)) {\n      this.setState({ contractOrLeaseForms: filesObject });\n      if (filesObject.length === 0) {\n        const uploadBtn = document.getElementById(\n          'contractOrLeaseItemsUploadForm'\n        );\n        if (uploadBtn) {\n          uploadBtn.value = null;\n        }\n      }\n      return;\n    }\n    const fileArray = Object.keys(filesObject).map(key => filesObject[key]);\n    this.setState({ contractOrLeaseForms: fileArray });\n  };\n\n  handleMgmtOrCobrokeCompanyChange = event => {\n    this.setState({\n      newMgmtOrCobrokeCompany: event.target.value,\n    });\n  };\n\n  toggleChoosingMgmtCoBrokeCompany = bool => {\n    const { choosingMgmtCoBrokeCompany } = this.state;\n    this.setState({\n      choosingMgmtCoBrokeCompany:\n        typeof bool === 'boolean' ? bool : !choosingMgmtCoBrokeCompany,\n      newMgmtOrCobrokeCompany: '',\n    });\n  };\n\n  setHasSetNewMgmtOrCobrokeCompany = bool => {\n    const { addedManagementCompanies, newMgmtOrCobrokeCompany } = this.state;\n    this.setState({\n      choosingMgmtCoBrokeCompany: false,\n      hasSetNewMgmtOrCobrokeCompany: true,\n      newMgmtOrCobrokeCompany: '',\n      addedManagementCompanies: [\n        ...addedManagementCompanies,\n        capitalize(newMgmtOrCobrokeCompany.trim()),\n      ],\n    });\n  };\n\n  setInitialContainerState = ({ paymentsTotal, deductionsTotal, total }) => {\n    this.setState({\n      paymentsTotal,\n      deductionsTotal,\n      total,\n    });\n  };\n\n  onSubmit = values => {\n    const { setFormSubmitted, dealID, userRole } = this.props;\n    setFormSubmitted();\n\n    const {\n      contractOrLeaseForms,\n      agencyDisclosureForm,\n      addedManagementCompanies,\n      hasSetNewMgmtOrCobrokeCompany,\n      paymentsTotal,\n      deductionsTotal,\n      total,\n    } = this.state;\n\n    const returnObject = {\n      ...values,\n      addedManagementCompanies,\n      paymentsTotal,\n      deductionsTotal,\n      total,\n      agencyDisclosureForm: null,\n      contractOrLeaseForms: [],\n      dealID,\n    };\n\n    delete returnObject.contractOrLeaseItems;\n    delete returnObject.deductionsSubtotal;\n    delete returnObject.paymentsSubtotal;\n    delete returnObject.financialsTotal;\n    delete returnObject.date;\n    delete returnObject.agent;\n    delete returnObject.agentType;\n    delete returnObject.state;\n\n    if (userRole !== admin && userRole !== superAdmin) {\n      delete returnObject.bonusPercentageAddedByAdmin;\n    }\n\n    returnObject.price = Number(returnObject.price);\n    returnObject.paymentItems = returnObject.paymentItems.map(item => ({\n      ...item,\n      amount: Number(item.amount),\n    }));\n    returnObject.deductionItems = returnObject.deductionItems.map(item => ({\n      ...item,\n      amount: Number(item.amount),\n    }));\n\n    const uploadItems = [];\n\n    if (agencyDisclosureForm) {\n      uploadItems.push({\n        itemName: 'agencyDisclosureForm',\n        fileName: agencyDisclosureForm.name,\n        fileType: agencyDisclosureForm.type,\n      });\n    }\n\n    if (contractOrLeaseForms && contractOrLeaseForms.length) {\n      contractOrLeaseForms.forEach((file, i) => {\n        uploadItems.push({\n          itemName: `contractOrLeaseForm${i}`,\n          fileName: file.name,\n          fileType: file.type,\n        });\n      });\n    }\n\n    if (!uploadItems.length) {\n      this.setState({\n        submittingFormToServer: true,\n      });\n\n      updateDeal(returnObject)\n        .then(res => {\n          let failed = false;\n\n          if (res.otherError) {\n            this.props.openRequestErrorSnackbar(res.otherError);\n            failed = true;\n          }\n\n          if (res.userErrors.length) {\n            failed = true;\n          }\n\n          if (!failed) {\n            this.props.setDealSuccessfullySubmitted(res.deal);\n          }\n\n          this.setState({\n            submittingFormToServer: false,\n          });\n\n          this.props.setFormSubmitted(false);\n        })\n        .catch(err => {\n          this.props.setFormSubmitted(false);\n          this.props.openRequestErrorSnackbar();\n        });\n      return;\n    }\n\n    getDealUploadsSignedURLS(uploadItems, dealID).then(response => {\n      if (response.error) {\n        this.props.openRequestErrorSnackbar(response.error);\n        return;\n      }\n\n      const errors = [];\n\n      const { items } = response;\n\n      returnObject.dealID = dealID;\n\n      items.forEach(item => {\n        if (item.error) errors.push(item.error);\n      });\n\n      if (errors.length) {\n        this.props.openRequestErrorSnackbar(errors[0]);\n        return;\n      }\n\n      this.uploadItemsNum = items.length;\n\n      const recursiveUploads = (items, returnObject, thisRef) => {\n        const uploadItemsNum = items.length;\n        const uploadItemIndex = 0;\n        recursiveHelper(\n          items,\n          uploadItemIndex,\n          uploadItemsNum,\n          returnObject,\n          thisRef\n        );\n      };\n\n      const recursiveHelper = (\n        items,\n        uploadItemIndex,\n        uploadItemsNum,\n        returnObject,\n        thisRef\n      ) => {\n        if (uploadItemIndex >= items.length) {\n          thisRef.setState({\n            isUploadingFile: false,\n            uplodingFileProgress: 0,\n            filesUploadedSuccessfully: true,\n            submittingFormToServer: true,\n          });\n\n          updateDeal(returnObject)\n            .then(res => {\n              let failed = false;\n\n              if (res.otherError) {\n                this.props.openRequestErrorSnackbar(res.otherError);\n                failed = true;\n              }\n\n              if (res.userErrors.length) {\n                failed = true;\n              }\n\n              if (!failed) {\n                this.props.setDealSuccessfullySubmitted(res.deal);\n              }\n              this.props.setFormSubmitted(false);\n            })\n            .catch(err => {\n              this.props.setFormSubmitted(false);\n              this.props.openRequestErrorSnackbar();\n            });\n\n          return;\n        }\n\n        const item = items[uploadItemIndex];\n\n        let file;\n        let fileIndex;\n\n        if (item.itemName === 'agencyDisclosureForm') {\n          file = thisRef.state.agencyDisclosureForm;\n          returnObject.agencyDisclosureForm = item.fileName;\n        } else {\n          fileIndex = item.itemName.slice(-1);\n          file = thisRef.state.contractOrLeaseForms[fileIndex];\n          returnObject.contractOrLeaseForms.push(item.fileName);\n        }\n\n        uploadFile({\n          file,\n          url: item.signedURL,\n          onUploadProgress: progressEvent => {\n            // Do whatever you want with the native progress event\n            const loadedPercent = (progressEvent.loaded / progressEvent.total) * 100;\n\n            thisRef.setState({\n              formSubmissionBegun: true,\n              uplodingFileProgress: Math.floor(loadedPercent),\n              uplodingFileText: `Now uploading file ${uploadItemIndex\n                + 1} of ${uploadItemsNum}...`,\n              isUploadingFile: true,\n            });\n          },\n        })\n          .then(() => recursiveHelper(\n            items,\n            uploadItemIndex + 1,\n            uploadItemsNum,\n            returnObject,\n            thisRef\n          )\n          )\n          .catch(err => this.props.openRequestErrorSnackbar());\n      };\n\n      recursiveUploads(items, returnObject, this);\n    });\n  };\n\n  onSubmitFailure = (errs, onSubmitError, formApi) => {\n    console.log(errs);\n    console.log(onSubmitError);\n    console.log(formApi.errors);\n  };\n\n  render() {\n    const {\n      userUUID: uuid,\n      dealID,\n      isEditingDeal,\n      isViewType,\n      ...rest\n    } = this.props;\n    const { agencyDisclosureForm, contractOrLeaseForms } = this.state;\n\n    return (\n      <Query\n        query={viewDealFormQuery}\n        variables={{ uuid: dealID }}\n        fetchPolicy=\"cache-and-network\"\n      >\n        {({ loading, error, data }) => {\n          if (loading) {\n            return (\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Loader color=\"#f44336\" loading />\n              </div>\n            );\n          }\n\n          if (error) {\n            console.log(error);\n            return (\n              <div style={{ textAlign: 'center' }}>\n                We're sorry. There was an error processing your request.\n              </div>\n            );\n          }\n\n          const {\n            deal,\n            agents: agentItems,\n            formSelectItems,\n          } = data.viewDealForm;\n\n          const agents = agentItems || [];\n\n          return (\n            <SubmitDealForm\n              setInitialContainerState={this.setInitialContainerState}\n              paymentsTotal={`${this.state.paymentsTotal}`}\n              deductionsTotal={`${this.state.deductionsTotal}`}\n              total={this.state.total}\n              submittedDeal={deal}\n              agents={agents}\n              managementCobrokeCompanyItems={formSelectItems || []}\n              onSubmit={this.onSubmit}\n              setAgencyDisclosureForm={this.setAgencyDisclosureForm}\n              setContractOrLeaseForms={this.setContractOrLeaseForms}\n              agencyDisclosureForm={agencyDisclosureForm}\n              contractOrLeaseForms={contractOrLeaseForms}\n              paymentAmountChangeHandler={this.paymentAmountChangeHandler}\n              addedManagementCompanies={this.state.addedManagementCompanies}\n              newMgmtOrCobrokeCompany={this.state.newMgmtOrCobrokeCompany}\n              uplodingFileProgress={this.state.uplodingFileProgress}\n              isUploadingFile={this.state.isUploadingFile}\n              uplodingFileText={this.state.uplodingFileText}\n              formSubmissionBegun={this.state.formSubmissionBegun}\n              submittingFormToServer={\n                this.state.submittingFormToServer\n                || this.props.submittingRequestToServer\n              }\n              isEditingDeal={isEditingDeal}\n              isViewType={isViewType}\n              userRole={this.props.userRole}\n              onBonusChange={this.props.onBonusChange}\n              dealBonus={this.props.dealBonus}\n              resetDealBonus={this.props.resetDealBonus}\n              setHasSetNewMgmtOrCobrokeCompany={\n                this.setHasSetNewMgmtOrCobrokeCompany\n              }\n              toggleChoosingMgmtCoBrokeCompany={\n                this.toggleChoosingMgmtCoBrokeCompany\n              }\n              handleMgmtOrCobrokeCompanyChange={\n                this.handleMgmtOrCobrokeCompanyChange\n              }\n              choosingMgmtCoBrokeCompany={this.state.choosingMgmtCoBrokeCompany}\n              deductionAmountChangeHandler={this.deductionAmountChangeHandler}\n              subtractPaymentValueFromState={this.subtractPaymentValueFromState}\n              subtractDeductionValueFromState={\n                this.subtractDeductionValueFromState\n              }\n              {...rest}\n            />\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default ViewDealFormContainer;\n\n\n\n// WEBPACK FOOTER //\n// src/containers/ViewDealForm.js"],"mappings":"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","sourceRoot":""}