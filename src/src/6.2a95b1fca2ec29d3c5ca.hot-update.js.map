{"version":3,"file":"6.2a95b1fca2ec29d3c5ca.hot-update.js","sources":["webpack:///src/components/MaterialCustomSelectInputWrapper/index.js"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from 'material-ui/styles';\nimport { FormControl, FormHelperText } from 'material-ui/Form';\nimport Select from 'material-ui/Select';\nimport Input, { InputLabel } from 'material-ui/Input';\nimport { MenuItem } from 'material-ui/Menu';\nimport Chip from 'material-ui/Chip';\nimport { Field } from 'react-form';\nimport classnames from 'classnames';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  disabled: {\n    cursor: 'not-allowed',\n  },\n  root: {\n    display: 'flex',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    marginLeft: 0,\n    minWidth: 120,\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2,\n  },\n  input: {\n    textAlign: 'left',\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n  },\n  select: {\n    textAlign: 'left',\n  },\n});\n\nclass MaterialCustomSelectInputWrapper extends React.Component {\n  componentWillUnmount = () => {\n    if (this._fieldApi) this._fieldApi.setError('');\n  };\n\n  render() {\n    return (\n      <Field\n        validate={this.props.validate}\n        field={this.props.field}\n        {...this.props}\n      >\n        {fieldApi => {\n          const {\n            onInput,\n            classes,\n            label,\n            id,\n            disabled,\n            fullWidth,\n            required,\n            multiline,\n            field,\n            onBlur,\n            onChange,\n            selectInputItems,\n            horizontal,\n            className,\n            multiple,\n            name,\n            validate,\n            SelectDisplayProps,\n            ...rest\n          } = this.props;\n\n          const {\n            value,\n            error,\n            warning,\n            success,\n            setValue,\n            setTouched,\n            touched,\n          } = fieldApi;\n\n          this._fieldApi = fieldApi;\n\n          const renderSelectInputItems = selectInputItems =>\n            selectInputItems.map(item => (\n              <MenuItem\n                key={item.key || item.label}\n                value={item.value || item.label}\n              >\n                {item.label}\n              </MenuItem>\n            ));\n\n          return (\n            <FormControl\n              error={error && touched}\n              fullWidth={fullWidth}\n              required={required}\n              className={\n                disabled\n                  ? `${classes.formControl} ${classes.disabled} ${className}`\n                  : `${classes.formControl} ${className}`\n              }\n            >\n              <InputLabel htmlFor={`${id}-error`} disabled={disabled}>\n                {label}\n              </InputLabel>\n              <Select\n                className={classnames(\n                  disabled && classes.disabled,\n                  classes.select\n                )}\n                disabled={disabled}\n                value={multiple ? value || [] : value || ''}\n                SelectDisplayProps={\n                  SelectDisplayProps || {\n                    style: { backgroundColor: 'inherit' },\n                  }\n                }\n                onChange={event => {\n                  setValue(event.target.value);\n                  if (onChange) {\n                    onChange(event.target.value);\n                  }\n                  if (onInput) {\n                    onInput(event);\n                  }\n                }}\n                input={\n                  <Input\n                    name={name}\n                    id={`${id}-helper`}\n                    disabled={disabled}\n                    className={classnames(\n                      classes.input,\n                      disabled && classes.disabled\n                    )}\n                  />\n                }\n                onBlur={event => {\n                  if (event.target.value || touched) setTouched();\n                  if (onBlur) {\n                    onBlur(event);\n                  }\n                }}\n                multiple={multiple}\n                renderValue={\n                  !multiple\n                    ? null\n                    : selected => (\n                        <div className={classes.chips}>\n                          {selected\n                            .filter(val => val !== '')\n                            .map(value => (\n                              <Chip\n                                key={value}\n                                label={value}\n                                className={classes.chip}\n                              />\n                            ))}\n                        </div>\n                      )\n                }\n                {...rest}\n              >\n                {renderSelectInputItems(selectInputItems)}\n              </Select>\n              {error && touched ? (\n                <FormHelperText>{error}</FormHelperText>\n              ) : null}\n            </FormControl>\n          );\n        }}\n      </Field>\n    );\n  }\n}\n\nexport default withStyles(styles)(observer(MaterialCustomSelectInputWrapper));\n\n/*\n\n{error && touched ? <Message color=\"#ef5350\" message={error} /> : null}\n        {!error && warning && touched ? (\n          <Message color=\"orange\" message={warning} />\n        ) : null}\n        {!error && !warning && success ? (\n          <Message color=\"green\" message={success} />\n        ) : null}\n\n*/\n\n\n\n// WEBPACK FOOTER //\n// src/components/MaterialCustomSelectInputWrapper/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAhCA;AAAA;AACA;AAoCA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;;;;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AACA;AASA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAIA;AACA;AACA;AAEA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AADA;AAJA;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6DA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;;;;;;;;;;;AA3IA;AACA;AA6IA;AACA;AADA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;AAtLA;AAqCA;;;;;;;;;;A","sourceRoot":""}