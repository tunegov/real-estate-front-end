{"version":3,"file":"5.3e0f880c944c2e789bbc.hot-update.js","sources":["webpack:///src/components/AdminDealsSummary/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from 'material-ui/styles';\nimport Grid from 'material-ui/Grid';\nimport { ResponsivePie } from '@nivo/pie';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { ResponsiveLine } from '@nivo/line';\nimport withSizes from 'react-sizes';\nimport Chance from 'chance';\nimport ToggleButton from 'react-toggle-button';\nimport moment from 'moment';\nimport DollarIcon from '@material-ui/icons/AttachMoney';\nimport PendingIcon from '@material-ui/icons/Help';\nimport { round } from '../../utils/Math';\nimport StatNumberBox from '../StatNumberBox';\n\nconst chance = new Chance();\n\nconst styles = theme => ({\n  root: {\n    maxWidth: '100%',\n    fontFamily: theme.typography.fontFamily,\n  },\n  graphWrapper: {\n    position: 'relative',\n    padding: '10px',\n    height: '500px',\n    maxHeight: '100%',\n    maxWidth: '100%',\n    backgroundColor: '#fff',\n    fontSize: '12px',\n    boxShadow: theme.shadows[1],\n    borderRadius: '5px',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  graphWrapper2: {\n    position: 'relative',\n    padding: '10px',\n    height: '500px',\n    [theme.breakpoints.down('sm')]: {\n      height: '670px',\n    },\n    maxHeight: '100%',\n    maxWidth: '100%',\n    backgroundColor: '#fff',\n    fontSize: '12px',\n    boxShadow: theme.shadows[1],\n    borderRadius: '5px',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  graphControlsWrapper: {\n    position: 'absolute',\n    padding: '6px 80px',\n    bottom: '0',\n    alignText: 'center',\n    zIndex: 1,\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  toggleWrapper: {\n    marginRight: '20px',\n  },\n  graphControlsLabel: {\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: '10px',\n    color: 'rgba(0,0,0,.8)',\n  },\n  graphTitle: {\n    position: 'absolute',\n    top: 0,\n    padding: '15px 10px',\n    fontSize: '16px',\n    fontWeight: 500,\n    alignText: 'center',\n    color: 'rgba(0,0,0,.7)',\n    textDecoration: 'underline',\n    transition: 'all .3s ease-in-out',\n  },\n  statNumberBoxWrapper: {\n    width: '50%',\n  },\n  statBoxQuestionIcon: {\n    fontSize: '40px',\n    color: '#F57C00',\n  },\n  statBoxMoneyIcon: {\n    fontSize: '40px',\n    color: '#388E3C',\n  },\n});\n\nconst mapSizesToProps = ({ width }) => ({\n  xsViewport: width < 412,\n  smViewport: width < 600,\n  mdViewport: width < 960,\n  lgViewport: width < 1280,\n});\n\n@observer\n@withSizes(mapSizesToProps)\nclass AdminDealsSummary extends Component {\n  state = {\n    monthlyDealsNumberLineGraphOn: true,\n    monthlyDealsDollarLineGraphOn: true,\n\n    yearlyDealsNumberGraphOn: false,\n    yearlyDealsDollarGraphOn: false,\n\n    monthlyDealsDollarOrNum: 'number',\n    totalDealsPieDollarOrNum: 'number',\n  };\n\n  toggleMonthlyDealsNumberLineGraph = () => {\n    this.setState({\n      monthlyDealsNumberLineGraphOn: !this.state.monthlyDealsNumberLineGraphOn,\n    });\n  };\n\n  toggleMonthlyDealsDollarLineGraph = () => {\n    this.setState({\n      monthlyDealsDollarLineGraphOn: !this.state.monthlyDealsDollarLineGraphOn,\n    });\n  };\n\n  toggleMonthlyDealsDollarOrNum = () => {\n    this.setState({\n      monthlyDealsDollarOrNum:\n        this.state.monthlyDealsDollarOrNum === 'dollar' ? 'number' : 'dollar',\n    });\n  };\n\n  toggleTotalDealsPieDollarOrNum = () => {\n    this.setState({\n      totalDealsPieDollarOrNum:\n        this.state.totalDealsPieDollarOrNum === 'dollar' ? 'number' : 'dollar',\n    });\n  };\n\n  toggleYearlyDealsNumberGraph = () => {\n    this.setState({\n      yearlyDealsNumberGraphOn: !this.state.yearlyDealsNumberGraphOn,\n    });\n  };\n\n  toggleYearlyDealsDollarGraph = () => {\n    this.setState({\n      yearlyDealsDollarGraphOn: !this.state.yearlyDealsDollarGraphOn,\n    });\n  };\n\n  barGraphLayout = () => {\n    const { lgViewport, mdViewport, smViewport } = this.props;\n    if (smViewport) {\n      return 'horizontal';\n    } else if (mdViewport) {\n      return 'vertical';\n    }\n    if (lgViewport) {\n      return 'vertical';\n    }\n    return 'horizontal';\n  };\n\n  dollarBarGraphAxis = (axis, isYear) => {\n    const { lgViewport, mdViewport, smViewport } = this.props;\n    if (axis === 'left') {\n      if (smViewport) {\n        return isYear ? 'Year' : 'Month';\n      } else if (mdViewport) {\n        return 'Gross Dollar Amount ($ Thousands)';\n      }\n      if (lgViewport) {\n        return 'Gross Dollar Amount ($ Thousands)';\n      }\n      return isYear ? 'Year' : 'Month';\n    }\n\n    if (smViewport) {\n      return 'Gross Dollar Amount ($ Thousands)';\n    } else if (mdViewport) {\n      return isYear ? 'Year' : 'Month';\n    }\n    if (lgViewport) {\n      return isYear ? 'Year' : 'Month';\n    }\n    return 'Gross Dollar Amount ($ Thousands)';\n  };\n\n  numberBarGraphAxis = (axis, isYear) => {\n    const { lgViewport, mdViewport, smViewport } = this.props;\n    if (axis === 'left') {\n      if (smViewport) {\n        return isYear ? 'Year' : 'Month';\n      } else if (mdViewport) {\n        return 'Number of Deals';\n      }\n      if (lgViewport) {\n        return 'Number of Deals';\n      }\n      return isYear ? 'Year' : 'Month';\n    }\n\n    if (smViewport) {\n      return 'Number of Deals';\n    } else if (mdViewport) {\n      return isYear ? 'Year' : 'Month';\n    }\n    if (lgViewport) {\n      return isYear ? 'Year' : 'Month';\n    }\n    return 'Number of Deals';\n  };\n\n  render() {\n    const { classes, smViewport, xsViewport } = this.props;\n    const {\n      totalDealsPieDollarOrNum,\n      yearlyDealsDollarGraphOn,\n      yearlyDealsNumberGraphOn,\n    } = this.state;\n    const borderRadiusStyle = { borderRadius: 2 };\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={16}>\n          <Grid item xs={12}>\n            <StatNumberBox\n              icon={DollarIcon}\n              iconClass={classes.statBoxMoneyIcon}\n              stat={`$${this.props.grossDealCommissions.toLocaleString()}`}\n              statTitle=\"Gross Commissions to Date\"\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <StatNumberBox\n              icon={DollarIcon}\n              iconClass={classes.statBoxMoneyIcon}\n              stat={`$${this.props.netDealCommissions.toLocaleString()}`}\n              statTitle=\"Net Commissions to Date\"\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <StatNumberBox\n              icon={DollarIcon}\n              iconClass={classes.statBoxMoneyIcon}\n              stat={`$${this.props.netCurrentYearDealCommissions.toLocaleString()}`}\n              statTitle={`${moment().year()} Net Commissions to Date`}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <StatNumberBox\n              icon={PendingIcon}\n              iconClass={classes.statBoxQuestionIcon}\n              stat={this.props.numberOfPendingDeals}\n              statTitle=\"Number of Pending Deals\"\n            />\n          </Grid>\n\n          {this.props.numberOfTotalDealsData ? (\n            <Grid item xs={12}>\n              <div\n                className={classes.graphWrapper}\n                style={{ fontSize: xsViewport ? '11px' : '12px' }}\n              >\n                <div className={classes.graphTitle}>\n                  Total Deals/Net Commissions\n                </div>\n                <ResponsivePie\n                  data={\n                    totalDealsPieDollarOrNum === 'number'\n                      ? this.props.numberOfTotalDealsData\n                      : this.props.netDollarAmtOfTotalDealsData\n                  }\n                  margin={{\n                    top: 70,\n                    right: 80,\n                    bottom: 120,\n                    left: 80,\n                  }}\n                  innerRadius={0.7}\n                  padAngle={0.7}\n                  cornerRadius={0}\n                  colors=\"dark2\"\n                  colorBy=\"id\"\n                  borderColor=\"inherit:darker(0.6)\"\n                  radialLabelsSkipAngle={10}\n                  radialLabelsTextXOffset={6}\n                  radialLabelsTextColor=\"#333333\"\n                  radialLabelsLinkOffset={0}\n                  radialLabelsLinkDiagonalLength={smViewport ? 4 : 16}\n                  radialLabelsLinkHorizontalLength={smViewport ? 10 : 24}\n                  radialLabelsLinkStrokeWidth={1}\n                  radialLabelsLinkColor=\"inherit\"\n                  slicesLabelsSkipAngle={10}\n                  slicesLabelsTextColor=\"#333333\"\n                  animate\n                  motionStiffness={90}\n                  motionDamping={15}\n                  legends={[\n                    {\n                      anchor: 'bottom',\n                      direction: 'row',\n                      translateY: 56,\n                      itemWidth: smViewport ? 85 : 100,\n                      itemHeight: 14,\n                      symbolSize: 14,\n                      symbolShape: 'circle',\n                      itemDirection: 'top-to-bottom',\n                    },\n                  ]}\n                />\n                <div className={classes.graphControlsWrapper}>\n                  <span className={classes.graphControlsLabel}>Controls:</span>\n                  <ToggleButton\n                    value={this.state.totalDealsPieDollarOrNum !== 'number'}\n                    thumbStyle={borderRadiusStyle}\n                    trackStyle={borderRadiusStyle}\n                    colors={{\n                      active: {\n                        base: 'rgb(65,66,68)',\n                        hover: 'rgb(95,96,98)',\n                      },\n                      inactive: {\n                        base: 'rgb(65,66,68)',\n                        hover: 'rgb(95,96,98)',\n                      },\n                    }}\n                    inactiveLabel=\"Num\"\n                    activeLabel=\"$\"\n                    onToggle={this.toggleTotalDealsPieDollarOrNum}\n                  />\n                </div>\n              </div>\n            </Grid>\n          ) : null}\n\n          <Grid item xs={12} lg={6}>\n            <div\n              className={classes.graphWrapper2}\n              style={{ fontSize: xsViewport ? '11px' : '12px' }}\n            >\n              <div className={classes.graphTitle}>Gross Commissions</div>\n              <div className={classes.graphControlsWrapper}>\n                <span className={classes.graphControlsLabel}>Controls:</span>\n                <span className={classes.toggleWrapper}>\n                  <ToggleButton\n                    value={!this.state.monthlyDealsDollarLineGraphOn}\n                    thumbStyle={borderRadiusStyle}\n                    trackStyle={borderRadiusStyle}\n                    colors={{\n                      active: {\n                        base: 'rgb(65,66,68)',\n                        hover: 'rgb(95,96,98)',\n                      },\n                      inactive: {\n                        base: 'rgb(65,66,68)',\n                        hover: 'rgb(95,96,98)',\n                      },\n                    }}\n                    inactiveLabel=\"Line\"\n                    activeLabel=\"Bar\"\n                    onToggle={this.toggleMonthlyDealsDollarLineGraph}\n                  />\n                </span>\n                <ToggleButton\n                  value={this.state.yearlyDealsDollarGraphOn}\n                  thumbStyle={borderRadiusStyle}\n                  trackStyle={borderRadiusStyle}\n                  colors={{\n                    active: {\n                      base: 'rgb(65,66,68)',\n                      hover: 'rgb(95,96,98)',\n                    },\n                    inactive: {\n                      base: 'rgb(65,66,68)',\n                      hover: 'rgb(95,96,98)',\n                    },\n                  }}\n                  inactiveLabel=\"Month\"\n                  activeLabel=\"Year\"\n                  onToggle={this.toggleYearlyDealsDollarGraph}\n                />\n              </div>\n              {this.state.monthlyDealsDollarLineGraphOn ? (\n                <ResponsiveLine\n                  data={\n                    !yearlyDealsDollarGraphOn\n                      ? this.props.grossMonthlyDealsDollarLineData\n                      : this.props.grossYearlyDealsDollarLineData\n                  }\n                  colors=\"dark2\"\n                  curve=\"catmullRom\"\n                  enableArea\n                  margin={{\n                    top: 60,\n                    right: smViewport ? 40 : 110,\n                    bottom: smViewport ? 130 : 80,\n                    left: 60,\n                  }}\n                  minY=\"auto\"\n                  axisBottom={{\n                    orient: 'bottom',\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: !yearlyDealsDollarGraphOn ? 'Month' : 'Year',\n                    legendOffset: 36,\n                    legendPosition: 'center',\n                  }}\n                  axisLeft={{\n                    orient: 'left',\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: 'Gross Dollar Amount ($ Thousands)',\n                    legendOffset: -40,\n                    legendPosition: 'center',\n                  }}\n                  dotSize={10}\n                  dotColor=\"inherit:darker(0.3)\"\n                  dotBorderWidth={2}\n                  dotBorderColor=\"#ffffff\"\n                  dotLabel=\"y\"\n                  dotLabelYOffset={-12}\n                  animate\n                  motionStiffness={90}\n                  motionDamping={15}\n                  legends={[\n                    {\n                      anchor: smViewport ? 'bottom' : 'bottom-right',\n                      direction: smViewport ? 'row' : 'column',\n                      translateX: smViewport ? undefined : 118,\n                      translateY: smViewport ? 76 : -40,\n                      itemWidth: smViewport ? 80 : 100,\n                      itemHeight: 20,\n                      itemsSpacing: smViewport ? 2 : 10,\n                      symbolSize: 12,\n                      itemDirection: smViewport ? 'top-to-bottom' : undefined,\n                    },\n                  ]}\n                />\n              ) : (\n                <ResponsiveBar\n                  data={\n                    yearlyDealsDollarGraphOn\n                      ? this.props.grossYearlyDealsDollarBarData\n                      : this.props.grossMonthlyDealsDollarBarData\n                  }\n                  colors=\"dark2\"\n                  groupMode=\"grouped\"\n                  maxValue=\"auto\"\n                  layout={this.barGraphLayout()}\n                  keys={[\n                    'Com Sales',\n                    'Com Rentals',\n                    'Res Sales',\n                    'Res Rentals',\n                  ]}\n                  indexBy=\"month\"\n                  margin={{\n                    top: 50,\n                    right: smViewport ? 40 : 130,\n                    bottom: smViewport ? 130 : 80,\n                    left: 60,\n                  }}\n                  padding={0.3}\n                  colorBy=\"id\"\n                  defs={[\n                    {\n                      id: 'dots',\n                      type: 'patternDots',\n                      background: 'inherit',\n                      color: '#38bcb2',\n                      size: 4,\n                      padding: 1,\n                      stagger: true,\n                    },\n                    {\n                      id: 'lines',\n                      type: 'patternLines',\n                      background: 'inherit',\n                      color: '#eed312',\n                      rotation: -45,\n                      lineWidth: 6,\n                      spacing: 10,\n                    },\n                  ]}\n                  fill={[\n                    {\n                      match: {\n                        id: 'fries',\n                      },\n                      id: 'dots',\n                    },\n                    {\n                      match: {\n                        id: 'sandwich',\n                      },\n                      id: 'lines',\n                    },\n                  ]}\n                  borderColor=\"inherit:darker(1.6)\"\n                  axisBottom={{\n                    orient: 'bottom',\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: yearlyDealsDollarGraphOn\n                      ? this.dollarBarGraphAxis('bottom', true)\n                      : this.dollarBarGraphAxis('bottom'),\n                    legendPosition: 'center',\n                    legendOffset: 36,\n                  }}\n                  axisLeft={{\n                    orient: 'left',\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: yearlyDealsDollarGraphOn\n                      ? this.dollarBarGraphAxis('left', true)\n                      : this.dollarBarGraphAxis('left'),\n                    legendPosition: 'center',\n                    legendOffset: -40,\n                  }}\n                  labelSkipWidth={12}\n                  labelSkipHeight={12}\n                  labelTextColor=\"inherit:darker(1.6)\"\n                  animate\n                  motionStiffness={90}\n                  motionDamping={15}\n                  innerPadding={2}\n                  legends={[\n                    {\n                      dataFrom: 'keys',\n                      anchor: smViewport ? 'bottom' : 'bottom-right',\n                      direction: smViewport ? 'row' : 'column',\n                      translateX: smViewport ? undefined : 120,\n                      translateY: smViewport ? 76 : -40,\n                      itemWidth: smViewport ? 80 : 100,\n                      itemHeight: 20,\n                      itemsSpacing: smViewport ? 2 : 10,\n                      symbolSize: 12,\n                      itemDirection: smViewport ? 'top-to-bottom' : undefined,\n                    },\n                  ]}\n                />\n              )}\n            </div>\n          </Grid>\n\n          <Grid item xs={12} lg={6}>\n            <div\n              className={classes.graphWrapper2}\n              style={{ fontSize: xsViewport ? '11px' : '12px' }}\n            >\n              <div className={classes.graphTitle}>Net Commissions</div>\n              <div className={classes.graphControlsWrapper}>\n                <span className={classes.graphControlsLabel}>Controls:</span>\n                <span className={classes.toggleWrapper}>\n                  <ToggleButton\n                    value={!this.state.monthlyDealsDollarLineGraphOn}\n                    thumbStyle={borderRadiusStyle}\n                    trackStyle={borderRadiusStyle}\n                    colors={{\n                      active: {\n                        base: 'rgb(65,66,68)',\n                        hover: 'rgb(95,96,98)',\n                      },\n                      inactive: {\n                        base: 'rgb(65,66,68)',\n                        hover: 'rgb(95,96,98)',\n                      },\n                    }}\n                    inactiveLabel=\"Line\"\n                    activeLabel=\"Bar\"\n                    onToggle={this.toggleMonthlyDealsDollarLineGraph}\n                  />\n                </span>\n                <ToggleButton\n                  value={this.state.yearlyDealsDollarGraphOn}\n                  thumbStyle={borderRadiusStyle}\n                  trackStyle={borderRadiusStyle}\n                  colors={{\n                    active: {\n                      base: 'rgb(65,66,68)',\n                      hover: 'rgb(95,96,98)',\n                    },\n                    inactive: {\n                      base: 'rgb(65,66,68)',\n                      hover: 'rgb(95,96,98)',\n                    },\n                  }}\n                  inactiveLabel=\"Month\"\n                  activeLabel=\"Year\"\n                  onToggle={this.toggleYearlyDealsDollarGraph}\n                />\n              </div>\n              {this.state.monthlyDealsDollarLineGraphOn ? (\n                <ResponsiveLine\n                  data={\n                    !yearlyDealsDollarGraphOn\n                      ? this.props.monthlyDealsDollarLineData\n                      : this.props.yearlyDealsDollarLineData\n                  }\n                  colors=\"dark2\"\n                  curve=\"catmullRom\"\n                  enableArea\n                  margin={{\n                    top: 60,\n                    right: smViewport ? 40 : 110,\n                    bottom: smViewport ? 130 : 80,\n                    left: 60,\n                  }}\n                  minY=\"auto\"\n                  axisBottom={{\n                    orient: 'bottom',\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: !yearlyDealsDollarGraphOn ? 'Month' : 'Year',\n                    legendOffset: 36,\n                    legendPosition: 'center',\n                  }}\n                  axisLeft={{\n                    orient: 'left',\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: 'Net Dollar Amount ($ Thousands)',\n                    legendOffset: -40,\n                    legendPosition: 'center',\n                  }}\n                  dotSize={10}\n                  dotColor=\"inherit:darker(0.3)\"\n                  dotBorderWidth={2}\n                  dotBorderColor=\"#ffffff\"\n                  dotLabel=\"y\"\n                  dotLabelYOffset={-12}\n                  animate\n                  motionStiffness={90}\n                  motionDamping={15}\n                  legends={[\n                    {\n                      anchor: smViewport ? 'bottom' : 'bottom-right',\n                      direction: smViewport ? 'row' : 'column',\n                      translateX: smViewport ? undefined : 118,\n                      translateY: smViewport ? 76 : -40,\n                      itemWidth: smViewport ? 80 : 100,\n                      itemHeight: 20,\n                      itemsSpacing: smViewport ? 2 : 10,\n                      symbolSize: 12,\n                      itemDirection: smViewport ? 'top-to-bottom' : undefined,\n                    },\n                  ]}\n                />\n              ) : (\n                <ResponsiveBar\n                  data={\n                    yearlyDealsDollarGraphOn\n                      ? this.props.yearlyDealsDollarBarData\n                      : this.props.monthlyDealsDollarBarData\n                  }\n                  colors=\"dark2\"\n                  groupMode=\"grouped\"\n                  maxValue=\"auto\"\n                  layout={this.barGraphLayout()}\n                  keys={[\n                    'Com Sales',\n                    'Com Rentals',\n                    'Res Sales',\n                    'Res Rentals',\n                  ]}\n                  indexBy=\"month\"\n                  margin={{\n                    top: 50,\n                    right: smViewport ? 40 : 130,\n                    bottom: smViewport ? 130 : 80,\n                    left: 60,\n                  }}\n                  padding={0.3}\n                  colorBy=\"id\"\n                  defs={[\n                    {\n                      id: 'dots',\n                      type: 'patternDots',\n                      background: 'inherit',\n                      color: '#38bcb2',\n                      size: 4,\n                      padding: 1,\n                      stagger: true,\n                    },\n                    {\n                      id: 'lines',\n                      type: 'patternLines',\n                      background: 'inherit',\n                      color: '#eed312',\n                      rotation: -45,\n                      lineWidth: 6,\n                      spacing: 10,\n                    },\n                  ]}\n                  fill={[\n                    {\n                      match: {\n                        id: 'fries',\n                      },\n                      id: 'dots',\n                    },\n                    {\n                      match: {\n                        id: 'sandwich',\n                      },\n                      id: 'lines',\n                    },\n                  ]}\n                  borderColor=\"inherit:darker(1.6)\"\n                  axisBottom={{\n                    orient: 'bottom',\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: yearlyDealsDollarGraphOn\n                      ? this.dollarBarGraphAxis('bottom', true)\n                      : this.dollarBarGraphAxis('bottom'),\n                    legendPosition: 'center',\n                    legendOffset: 36,\n                  }}\n                  axisLeft={{\n                    orient: 'left',\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: yearlyDealsDollarGraphOn\n                      ? this.dollarBarGraphAxis('left', true)\n                      : this.dollarBarGraphAxis('left'),\n                    legendPosition: 'center',\n                    legendOffset: -40,\n                  }}\n                  labelSkipWidth={12}\n                  labelSkipHeight={12}\n                  labelTextColor=\"inherit:darker(1.6)\"\n                  animate\n                  motionStiffness={90}\n                  motionDamping={15}\n                  innerPadding={2}\n                  legends={[\n                    {\n                      dataFrom: 'keys',\n                      anchor: smViewport ? 'bottom' : 'bottom-right',\n                      direction: smViewport ? 'row' : 'column',\n                      translateX: smViewport ? undefined : 120,\n                      translateY: smViewport ? 76 : -40,\n                      itemWidth: smViewport ? 80 : 100,\n                      itemHeight: 20,\n                      itemsSpacing: smViewport ? 2 : 10,\n                      symbolSize: 12,\n                      itemDirection: smViewport ? 'top-to-bottom' : undefined,\n                    },\n                  ]}\n                />\n              )}\n            </div>\n          </Grid>\n\n          <Grid item xs={12}>\n            <div\n              className={classes.graphWrapper2}\n              style={{ fontSize: xsViewport ? '11px' : '12px' }}\n            >\n              <div className={classes.graphTitle}>Number of Deals</div>\n              <div className={classes.graphControlsWrapper}>\n                <span className={classes.graphControlsLabel}>Controls:</span>\n                <span className={classes.toggleWrapper}>\n                  <ToggleButton\n                    value={!this.state.monthlyDealsNumberLineGraphOn}\n                    thumbStyle={borderRadiusStyle}\n                    trackStyle={borderRadiusStyle}\n                    colors={{\n                      active: {\n                        base: 'rgb(65,66,68)',\n                        hover: 'rgb(95,96,98)',\n                      },\n                      inactive: {\n                        base: 'rgb(65,66,68)',\n                        hover: 'rgb(95,96,98)',\n                      },\n                    }}\n                    inactiveLabel=\"Line\"\n                    activeLabel=\"Bar\"\n                    onToggle={this.toggleMonthlyDealsNumberLineGraph}\n                  />\n                </span>\n                <ToggleButton\n                  value={this.state.yearlyDealsNumberGraphOn}\n                  thumbStyle={borderRadiusStyle}\n                  trackStyle={borderRadiusStyle}\n                  colors={{\n                    active: {\n                      base: 'rgb(65,66,68)',\n                      hover: 'rgb(95,96,98)',\n                    },\n                    inactive: {\n                      base: 'rgb(65,66,68)',\n                      hover: 'rgb(95,96,98)',\n                    },\n                  }}\n                  inactiveLabel=\"Month\"\n                  activeLabel=\"Year\"\n                  onToggle={this.toggleYearlyDealsNumberGraph}\n                />\n              </div>\n              {this.state.monthlyDealsNumberLineGraphOn ? (\n                <ResponsiveLine\n                  data={\n                    !yearlyDealsNumberGraphOn\n                      ? this.props.monthlyDealsNumberLineData\n                      : this.props.yearlyDealsNumberLineData\n                  }\n                  colors=\"dark2\"\n                  curve=\"catmullRom\"\n                  enableArea\n                  margin={{\n                    top: 60,\n                    right: smViewport ? 40 : 110,\n                    bottom: smViewport ? 130 : 80,\n                    left: 60,\n                  }}\n                  minY=\"auto\"\n                  axisBottom={{\n                    orient: 'bottom',\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: !yearlyDealsNumberGraphOn ? 'Month' : 'Year',\n                    legendOffset: 36,\n                    legendPosition: 'center',\n                  }}\n                  axisLeft={{\n                    orient: 'left',\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: 'Number of Deals',\n                    legendOffset: -40,\n                    legendPosition: 'center',\n                  }}\n                  dotSize={10}\n                  dotColor=\"inherit:darker(0.3)\"\n                  dotBorderWidth={2}\n                  dotBorderColor=\"#ffffff\"\n                  dotLabel=\"y\"\n                  dotLabelYOffset={-12}\n                  animate\n                  motionStiffness={90}\n                  motionDamping={15}\n                  legends={[\n                    {\n                      anchor: smViewport ? 'bottom' : 'bottom-right',\n                      direction: smViewport ? 'row' : 'column',\n                      translateX: smViewport ? undefined : 118,\n                      translateY: smViewport ? 76 : -40,\n                      itemWidth: smViewport ? 80 : 100,\n                      itemHeight: 20,\n                      itemsSpacing: smViewport ? 2 : 10,\n                      symbolSize: 12,\n                      itemDirection: smViewport ? 'top-to-bottom' : undefined,\n                    },\n                  ]}\n                />\n              ) : (\n                <ResponsiveBar\n                  data={\n                    yearlyDealsNumberGraphOn\n                      ? this.props.yearlyDealsNumberBarData\n                      : this.props.monthlyDealsNumberBarData\n                  }\n                  colors=\"dark2\"\n                  groupMode=\"grouped\"\n                  maxValue=\"auto\"\n                  layout={this.barGraphLayout()}\n                  keys={[\n                    'Com Sales',\n                    'Com Rentals',\n                    'Res Sales',\n                    'Res Rentals',\n                  ]}\n                  indexBy=\"month\"\n                  margin={{\n                    top: 50,\n                    right: smViewport ? 40 : 130,\n                    bottom: smViewport ? 130 : 80,\n                    left: 60,\n                  }}\n                  padding={0.3}\n                  colorBy=\"id\"\n                  defs={[\n                    {\n                      id: 'dots',\n                      type: 'patternDots',\n                      background: 'inherit',\n                      color: '#38bcb2',\n                      size: 4,\n                      padding: 1,\n                      stagger: true,\n                    },\n                    {\n                      id: 'lines',\n                      type: 'patternLines',\n                      background: 'inherit',\n                      color: '#eed312',\n                      rotation: -45,\n                      lineWidth: 6,\n                      spacing: 10,\n                    },\n                  ]}\n                  fill={[\n                    {\n                      match: {\n                        id: 'fries',\n                      },\n                      id: 'dots',\n                    },\n                    {\n                      match: {\n                        id: 'sandwich',\n                      },\n                      id: 'lines',\n                    },\n                  ]}\n                  borderColor=\"inherit:darker(1.6)\"\n                  axisBottom={{\n                    orient: 'bottom',\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: yearlyDealsNumberGraphOn\n                      ? this.numberBarGraphAxis('bottom', true)\n                      : this.numberBarGraphAxis('bottom'),\n                    legendPosition: 'center',\n                    legendOffset: 36,\n                  }}\n                  axisLeft={{\n                    orient: 'left',\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: yearlyDealsNumberGraphOn\n                      ? this.numberBarGraphAxis('left', true)\n                      : this.numberBarGraphAxis('left'),\n                    legendPosition: 'center',\n                    legendOffset: -40,\n                  }}\n                  labelSkipWidth={12}\n                  labelSkipHeight={12}\n                  labelTextColor=\"inherit:darker(1.6)\"\n                  animate\n                  motionStiffness={90}\n                  motionDamping={15}\n                  innerPadding={2}\n                  legends={[\n                    {\n                      dataFrom: 'keys',\n                      anchor: smViewport ? 'bottom' : 'bottom-right',\n                      direction: smViewport ? 'row' : 'column',\n                      translateX: smViewport ? undefined : 120,\n                      translateY: smViewport ? 76 : -40,\n                      itemWidth: smViewport ? 80 : 100,\n                      itemHeight: 20,\n                      itemsSpacing: smViewport ? 2 : 10,\n                      symbolSize: 12,\n                      itemDirection: smViewport ? 'top-to-bottom' : undefined,\n                    },\n                  ]}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(AdminDealsSummary);\n\n\n\n// WEBPACK FOOTER //\n// src/components/AdminDealsSummary/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AAHA;AAKA;AADA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAtEA;AAAA;AACA;AA2EA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AACA;AAQA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AARA;;;;;AAWA;AACA;AACA;AADA;AAGA;;;;;AAEA;AACA;AACA;AADA;AAGA;;;;;AAEA;AACA;AACA;AADA;AAIA;;;;;AAEA;AACA;AACA;AADA;AAIA;;;;;AAEA;AACA;AACA;AADA;AAGA;;;;;AAEA;AACA;AACA;AADA;AAGA;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAhCA;AAAA;AAAA;AAAA;AAAA;AA4CA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AA5CA;AAAA;AAAA;AAAA;AAAA;AA2DA;AAKA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAEA;AACA;AADA;AAGA;AAJA;AAOA;AACA;AADA;AAGA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AA1FA;AAAA;AAAA;AAAA;AAAA;AA4GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AA5CA;AAAA;AAAA;AAAA;AAAA;AA2DA;AAKA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAEA;AACA;AADA;AAGA;AAJA;AAOA;AACA;AADA;AAGA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AA1FA;AAAA;AAAA;AAAA;AAAA;AA4GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AA5CA;AAAA;AAAA;AAAA;AAAA;AA2DA;AAKA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAEA;AACA;AADA;AAGA;AAJA;AAOA;AACA;AADA;AAGA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AA1FA;AAAA;AAAA;AAAA;AAAA;AA8GA;;;;;;;;;;;AAh3BA;AACA;AAk3BA;AACA;AADA;;;;;;;;;;;;AA18BA;AAEA;AA4EA;AASA;;;;;;;;;;A","sourceRoot":""}