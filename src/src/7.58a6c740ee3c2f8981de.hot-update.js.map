{"version":3,"file":"7.58a6c740ee3c2f8981de.hot-update.js","sources":["webpack:///src/components/EditProfilePicDialogBox/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport Dialog, {\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  withMobileDialog,\n} from 'material-ui/Dialog';\nimport { Icon } from 'antd';\nimport Divider from 'material-ui/Divider';\nimport { withStyles } from 'material-ui/styles';\nimport Button from 'material-ui/Button';\nimport Snackbar from 'material-ui/Snackbar';\nimport IconButton from 'material-ui/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport classnames from 'classnames';\nimport EditProfilePicForm from '../../containers/EditProfilePicForm';\nimport { AppContext } from '../../AppGlobalStateProvider';\n\nconst networkErrorMessage =\n  \"We're sorry. There was an error processing your request.\";\n\nconst styles = theme => ({\n  paper: {\n    width: '600px',\n    maxWidth: '800px',\n  },\n  dialogActions: {\n    margin: '8px 0',\n  },\n  formTitle: {\n    padding: 'theme.spacing.unit theme.spacing.unit * 3',\n    textAlign: 'center',\n  },\n  formSubheader: {\n    paddingLeft: theme.spacing.unit * 4,\n    paddingRight: theme.spacing.unit * 4,\n    marginBottom: theme.spacing.unit * 6,\n    marginTop: theme.spacing.unit * 2,\n    textAlign: 'center',\n  },\n  dialogContent: {\n    paddingTop: '32px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  saveDraftBtn: {\n    marginRight: 'auto',\n    color: theme.custom.submitBlue.main,\n    '&:hover': {\n      backgroundColor: theme.custom.submitBlue.transparentLightBackground,\n    },\n  },\n  snackBar: {\n    position: 'absolute',\n    bottom: 0,\n  },\n  errorSnackbar: {\n    '& > div': {\n      backgroundColor: theme.palette.secondary.main,\n    },\n  },\n});\n\n@observer\nclass EditProfilePicDialogBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formApi: null,\n      submittingForm: false,\n      snackbarOpen: false,\n      snackbarText: '',\n      isErrorSnackbar: false,\n    };\n  }\n\n  setFormSubmitted = (bool = true) => {\n    this.setState({\n      formSubmitted: bool,\n    });\n  };\n\n  toggleSnackbarOpen = text => {\n    this.setState({\n      snackbarOpen: true,\n      snackbarText: text,\n    });\n  };\n\n  handleCloseSnackbar = () => {\n    this.setState({\n      snackbarOpen: false,\n      snackbarUndoFunction: null,\n      isErrorSnackbar: false,\n      snackbarText: '',\n    });\n  };\n\n  openRequestErrorSnackbar = (text = networkErrorMessage) => {\n    this.setState({\n      snackbarOpen: true,\n      snackbarText: text,\n      isErrorSnackbar: true,\n    });\n  };\n\n  render() {\n    const {\n      fullScreen,\n      classes,\n      closeProfilePicEditor,\n      open,\n      submitProfilePicEditForm,\n      finishedSubmittingForm,\n      submittingEditProfilePicForm,\n      toggleSubmittingEditProfilePicForm,\n      editProfilePicFormSubmitted,\n      setFormSubmitted,\n      setFinishedSubmittingForm,\n    } = this.props;\n\n    return (\n      <Dialog\n        open={open}\n        onClose={closeProfilePicEditor}\n        classes={{ paper: classes.paper }}\n        fullScreen={fullScreen}\n      >\n        <DialogTitle\n          id=\"form-dialog-title\"\n          classes={{ root: classes.formTitle }}\n        >\n          Edit Profile Picture\n        </DialogTitle>\n        <Divider />\n        <DialogContent\n          classes={{ root: classes.dialogContent }}\n          id=\"formDialog\"\n        >\n          <AppContext.Consumer>\n            {context => (\n              <EditProfilePicForm\n                userUUID={this.props.userUUID}\n                setIsSubmittingForm={this.setIsSubmittingForm}\n                finishedSubmittingForm={finishedSubmittingForm}\n                getFormApi={formApi => this.setState({ formApi })}\n                createAgent={context.UserStore.createAgent}\n                setAgentProfilePic={context.UserStore.setAgentProfilePic}\n                submitProfilePicEditForm={submitProfilePicEditForm}\n                setFormSubmitted={setFormSubmitted}\n                setFinishedSubmittingForm={setFinishedSubmittingForm}\n                editProfilePicFormSubmitted={editProfilePicFormSubmitted}\n                openRequestErrorSnackbar={this.openRequestErrorSnackbar}\n                createProfilePicDataURL={this.props.createProfilePicDataURL}\n                toggleSubmittingEditProfilePicForm={\n                  toggleSubmittingEditProfilePicForm\n                }\n                uuid={this.props.uuid}\n              />\n            )}\n          </AppContext.Consumer>\n\n          <Snackbar\n            classes={{\n              root: classnames(\n                classes.snackBar,\n                this.state.isErrorSnackbar && classes.errorSnackbar\n              ),\n            }}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'center',\n            }}\n            open={this.state.snackbarOpen}\n            autoHideDuration={this.state.isErrorSnackbar ? 8000 : 4000}\n            onClose={this.handleCloseSnackbar}\n            message={<span id=\"snackbar-id\">{this.state.snackbarText}</span>}\n            action={[\n              this.snackbarUndoFunction ? (\n                <Button\n                  key=\"undo\"\n                  color=\"secondary\"\n                  size=\"small\"\n                  onClick={() => {\n                    this.handleCloseSnackbar();\n                    if (\n                      this.state.snackbarUndoFunction &&\n                      typeof snackbarUndoFunction === 'function'\n                    ) {\n                      this.snackbarUndoFunction();\n                    }\n                  }}\n                >\n                  UNDO\n                </Button>\n              ) : (\n                undefined\n              ),\n              <IconButton\n                key=\"close\"\n                aria-label=\"Close\"\n                color=\"inherit\"\n                className={classes.close}\n                onClick={this.handleCloseSnackbar}\n              >\n                <CloseIcon />\n              </IconButton>,\n            ]}\n          />\n        </DialogContent>\n        {!submittingEditProfilePicForm ? (\n          <DialogActions classes={{ root: classes.dialogActions }}>\n            <Button onClick={closeProfilePicEditor} color=\"primary\">\n              Cancel\n            </Button>\n            <Button\n              onClick={() => this.state.formApi.submitForm()}\n              color=\"primary\"\n            >\n              Submit{' '}\n            </Button>\n          </DialogActions>\n        ) : null}\n      </Dialog>\n    );\n  }\n}\n\nexport default withMobileDialog()(withStyles(styles)(EditProfilePicDialogBox));\n\n\n\n// WEBPACK FOOTER //\n// src/components/EditProfilePicDialogBox/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AADA;AApCA;AAAA;AACA;AA2CA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AACA;AADA;AAGA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AACA;AAFA;AAIA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAvCA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AA+BA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAhBA;AAAA;AAAA;AAAA;AAAA;AADA;AAuBA;AACA;AADA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AA3CA;AAAA;AAAA;AAAA;AAAA;AAiDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;AAjKA;AACA;AAmKA;AACA;AADA;;;;;;;;;;;;AAnNA;AAGA;AA4CA;;;;;;;;;;A","sourceRoot":""}