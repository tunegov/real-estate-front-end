{"version":3,"file":"7.306a4f61637e7e4255f9.hot-update.js","sources":["webpack:///src/containers/Profile.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport faker from 'faker';\nimport { withStyles } from 'material-ui/styles';\nimport Snackbar from 'material-ui/Snackbar';\nimport IconButton from 'material-ui/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from 'material-ui/Button';\nimport Profile from '../components/Profile';\nimport ProfilePicDialogBox from '../components/EditProfilePicDialogBox';\nimport EditAgentDialogBox from '../components/EditAgentDialogBox';\nimport EditAgentPasswordDialogBox from '../components/EditAgentPasswordDialogBox';\n\nconst styles = theme => ({\n  submitInvoiceBtn: {},\n  wrapper: {\n    position: 'relative',\n  },\n  buttonsWrapper: {\n    display: 'flex',\n    marginBottom: '25px',\n    justifyContent: 'center',\n  },\n  snackBar: {\n    marginTop: 30,\n  },\n});\n\n@observer\n@withStyles(styles)\nclass ProfileContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    const { agent } = this.props;\n\n    this.state = {\n      user: agent,\n      isEditing: false,\n      profilePicEditorDialogBoxOpen: false,\n      submittingEditProfilePicForm: false,\n      editProfilePicFormSubmitted: false,\n      editAgentModalOpen: false,\n      editAgentDialogBoxOpen: false,\n      editAgentPasswordDialogBoxOpen: false,\n      snackbarOpen: false,\n      snackbarText: '',\n      isLoadingProfilePicture: true,\n    };\n  }\n\n  openProfilePicEditor = () => {\n    this.setState({\n      profilePicEditorDialogBoxOpen: true,\n    });\n  };\n\n  closeProfilePicEditor = () => {\n    this.setState({\n      profilePicEditorDialogBoxOpen: false,\n      editProfilePicFormSubmitted: false,\n    });\n  };\n\n  confirmProfilePicSubmitted = () => {\n    this.setState({\n      profilePicEditorDialogBoxOpen: false,\n    });\n  };\n\n  toggleIsLoadingProfilePicture = (bool = false) => {\n    console.log(`loaded: ${bool}`);\n    this.setState({\n      isLoadingProfilePicture: bool,\n    });\n  };\n\n  setFinishedSubmittingForm = url => {\n    const { user } = this.state;\n    this.setState(\n      {\n        user: {\n          ...user,\n          agent: {\n            ...user.agent,\n            profilePicURL: `${url}?cacheBust=${faker.random.uuid()}`,\n          },\n        },\n        profilePicEditorDialogBoxOpen: false,\n        isLoadingProfilePicture: true,\n        submittingEditProfilePicForm: false,\n        editProfilePicFormSubmitted: false,\n        snackbarOpen: true,\n        snackbarText: 'Profile picture successfully changed!',\n      },\n      () => {\n        const picEl = document.getElementById('agentProfilePic');\n\n        if (picEl) {\n          picEl.src = `${url}?cache=${faker.random.uuid()}`;\n        }\n      }\n    );\n  };\n\n  editPasswordFormSubmittedSuccessfully = () => {\n    this.setState({\n      editAgentPasswordDialogBoxOpen: false,\n      snackbarOpen: true,\n      snackbarText: 'Password successfully changed!',\n    });\n  };\n\n  editAgentFormSubmittedSuccessfully = agent => {\n    this.setState({\n      user: agent,\n      editAgentDialogBoxOpen: false,\n      snackbarOpen: true,\n      snackbarText: 'Agent Information successfully updated!',\n    });\n  };\n\n  toggleSubmittingEditProfilePicForm = bool => {\n    this.setState({\n      submittingEditProfilePicForm:\n        typeof bool === 'boolean'\n          ? bool\n          : !this.state.submittingEditProfilePicForm,\n    });\n  };\n\n  setFormSubmitted = () => {\n    this.setState({\n      editProfilePicFormSubmitted: true,\n    });\n  };\n\n  toggleEditAgentModal = state => {\n    const { editAgentModalOpen } = this.state;\n    this.setState({\n      editAgentModalOpen:\n        typeof state === 'boolean' ? state : !editAgentModalOpen,\n    });\n  };\n\n  openEditAgentDialogBox = () => {\n    this.setState({\n      editAgentDialogBoxOpen: true,\n    });\n  };\n\n  closeEditAgentDialogBox = () => {\n    this.setState({\n      editAgentDialogBoxOpen: false,\n    });\n  };\n\n  openEditAgentPasswordDialogBox = () => {\n    this.setState({\n      editAgentPasswordDialogBoxOpen: true,\n    });\n  };\n\n  closeEditAgentPasswordDialogBox = () => {\n    this.setState({\n      editAgentPasswordDialogBoxOpen: false,\n    });\n  };\n\n  handleCloseSnackbar = () => {\n    this.setState({\n      snackbarOpen: false,\n      snackbarUndoFunction: null,\n    });\n  };\n\n  agentSuccessfullyDeleted = () => {\n    this.setState({\n      snackbarOpen: true,\n      snackbarText: 'Agent has been successfully deleted!',\n    });\n    this.props.setAgentDeleted();\n  };\n\n  createProfilePicDataURL = URL => URL.createObjectURL(blob);\n\n  render() {\n    const {\n      isEditing,\n      profileEdited,\n      profilePicEditorDialogBoxOpen,\n      submittingEditProfilePicForm,\n      editProfilePicFormSubmitted,\n      isLoadingProfilePicture,\n    } = this.state;\n    const {\n      toggleEditingMode,\n      toggleProfileEdited,\n      setMobileNumber,\n      setDescription,\n      enterEditingMode,\n      cancelEditingMode,\n      saveUser,\n      openProfilePicEditor,\n      closeProfilePicEditor,\n      undoSave,\n      toggleEditAgentModal,\n    } = this;\n\n    const { classes } = this.props;\n    return (\n      <div>\n        <Profile\n          agent={this.state.user}\n          isEditing={isEditing}\n          enterEditingMode={enterEditingMode}\n          cancelEditingMode={cancelEditingMode}\n          profileEdited={profileEdited}\n          toggleProfileEdited={toggleProfileEdited}\n          setMobileNumber={setMobileNumber}\n          setDescription={setDescription}\n          saveUser={saveUser}\n          undoSave={undoSave}\n          openProfilePicEditor={openProfilePicEditor}\n          currentUserRole={this.props.currentUserRole}\n          currentUserUUID={this.props.currentUserUUID}\n          openEditAgentDialogBox={this.openEditAgentDialogBox}\n          openEditAgentPasswordDialogBox={this.openEditAgentPasswordDialogBox}\n          uuid={this.props.uuid}\n          isLoadingProfilePicture={isLoadingProfilePicture}\n          toggleIsLoadingProfilePicture={this.toggleIsLoadingProfilePicture}\n        />\n\n        <EditAgentDialogBox\n          open={this.state.editAgentDialogBoxOpen}\n          closeEditAgentDialogBox={this.closeEditAgentDialogBox}\n          confirmAgentCreated={this.confirmAgentCreated}\n          viewingAgentUUID={this.props.uuid}\n          currentUserRole={this.props.currentUserRole}\n          agentSuccessfullyDeleted={this.agentSuccessfullyDeleted}\n          editAgentFormSubmittedSuccessfully={\n            this.editAgentFormSubmittedSuccessfully\n          }\n        />\n\n        <EditAgentPasswordDialogBox\n          closeEditAgentPasswordDialogBox={this.closeEditAgentPasswordDialogBox}\n          open={this.state.editAgentPasswordDialogBoxOpen}\n          viewingAgentUUID={this.props.uuid}\n          editPasswordFormSubmittedSuccessfully={\n            this.editPasswordFormSubmittedSuccessfully\n          }\n        />\n\n        <ProfilePicDialogBox\n          submitProfilePicEditForm={this.submitProfilePicEditForm}\n          closeProfilePicEditor={closeProfilePicEditor}\n          open={profilePicEditorDialogBoxOpen}\n          confirmProfilePicSubmitted={this.confirmProfilePicSubmitted}\n          setFinishedSubmittingForm={this.setFinishedSubmittingForm}\n          submittingEditProfilePicForm={submittingEditProfilePicForm}\n          editProfilePicFormSubmitted={editProfilePicFormSubmitted}\n          setFormSubmitted={this.setFormSubmitted}\n          createProfilePicDataURL={this.createProfilePicDataURL}\n          toggleSubmittingEditProfilePicForm={\n            this.toggleSubmittingEditProfilePicForm\n          }\n          uuid={this.props.uuid}\n        />\n\n        <Snackbar\n          classes={{ root: classes.snackBar }}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          open={this.state.snackbarOpen}\n          autoHideDuration={4000}\n          onClose={this.handleCloseSnackbar}\n          message={<span id=\"snackbar-id\">{this.state.snackbarText}</span>}\n          action={[\n            this.snackbarUndoFunction ? (\n              <Button\n                key=\"undo\"\n                color=\"secondary\"\n                size=\"small\"\n                onClick={() => {\n                  this.handleCloseSnackbar();\n                  if (\n                    this.state.snackbarUndoFunction &&\n                    typeof snackbarUndoFunction === 'function'\n                  ) {\n                    this.snackbarUndoFunction();\n                  }\n                }}\n              >\n                UNDO\n              </Button>\n            ) : (\n              undefined\n            ),\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={this.handleCloseSnackbar}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ProfileContainer;\n\n\n\n// WEBPACK FOOTER //\n// src/containers/Profile.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAVA;AAAA;AACA;AAgBA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AALA;AAkBA;AACA;;;AAwIA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAbA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAtCA;AAAA;AAAA;AAAA;AAAA;AA4CA;;;;;;;;;;;AA5RA;;;;;;;AAqBA;AACA;AACA;AADA;AAGA;;;;;;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;;;;AAEA;AACA;AACA;AADA;AAGA;;;;;;AAEA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;;;;;;AAEA;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AAFA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAbA;AAgBA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;;;;AAEA;AACA;AACA;AADA;AAMA;;;;;;AAEA;AACA;AACA;AADA;AAGA;;;;;;AAEA;AAAA;AACA;AACA;AACA;AADA;AAIA;;;;;;AAEA;AACA;AACA;AADA;AAGA;;;;;;AAEA;AACA;AACA;AADA;AAGA;;;;;;AAEA;AACA;AACA;AADA;AAGA;;;;;;AAEA;AACA;AACA;AADA;AAGA;;;;;;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;;;;AAEA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;;;;;;AAEA;AAAA;AAAA;;;AAqIA;AAAA;;;;;;;;;;;;AAhTA;AAiBA;;;;;;;;;;A","sourceRoot":""}