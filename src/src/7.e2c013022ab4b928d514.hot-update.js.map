{"version":3,"file":"7.e2c013022ab4b928d514.hot-update.js","sources":["webpack:///src/constants/websiteURL.js","webpack:///src/lib/initApollo.js"],"sourcesContent":["const websiteURL = 'https://reyeselsamad.com/api/graphql';\n\nexport default websiteURL;\n\n\n\n// WEBPACK FOOTER //\n// src/constants/websiteURL.js","import { ApolloClient } from 'apollo-client';\nimport { HttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport fetch from 'isomorphic-unfetch';\nimport websiteURL from '../constants/websiteURL';\n\nlet apolloClient = null;\n\n// Polyfill fetch() on the server (used by apollo-client)\nif (!process.browser || !global.fetch) {\n  global.fetch = fetch;\n}\n\nfunction create(initialState) {\n  return new ApolloClient({\n    connectToDevTools: process.browser,\n    ssrMode: !process.browser, // Disables forceFetch on the server (so queries are only run once)\n    link: new HttpLink({\n      uri: `${websiteURL}`, // 'http://localhost/api/graphql', // Server URL (must be absolute)\n      credentials: 'same-origin', // Additional fetch() options like `credentials` or `headers`\n      headers: { Accept: 'application/json' },\n    }),\n    cache: new InMemoryCache().restore(initialState || {}),\n  });\n}\n\nexport default function initApollo(initialState) {\n  // Make sure to create a new client for every server-side request so that data\n  // isn't shared between connections (which would be bad)\n  if (!process.browser) {\n    return create(initialState);\n  }\n\n  // Reuse client on the client-side\n  if (!apolloClient) {\n    apolloClient = create(initialState);\n  }\n\n  return apolloClient;\n}\n\n\n\n// WEBPACK FOOTER //\n// src/lib/initApollo.js"],"mappings":";;;;;;;;;;;;AAAA;AAEA;AAAA;;;;;;;;;;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAHA;AAKA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAjCA;AAOA;AAaA;;;;;;;;;A","sourceRoot":""}