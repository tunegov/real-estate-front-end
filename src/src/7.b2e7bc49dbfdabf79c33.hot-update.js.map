{"version":3,"file":"7.b2e7bc49dbfdabf79c33.hot-update.js","sources":["webpack:///src/containers/SubmitDealForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { BounceLoader } from 'react-spinners';\nimport SubmitDealForm from '../components/forms/SubmitDealForm';\nimport getDealUploadsSignedURLS from '../effects/deals/getDealUploadsSignedURLS';\nimport uploadFile from '../effects/uploadFile';\nimport submitDeal from '../effects/deals/submitDeal';\nimport { capitalize } from '../utils/stringUtils';\n\nconst Loader = BounceLoader;\n\nexport const dealFormQuery = gql`\n  query dealForm($uuid: String) {\n    dealForm(uuid: $uuid) {\n      agent {\n        firstName\n        lastName\n        role\n        agent {\n          agentType\n          state\n          ACHAccountNumber\n          ACHAccountBankRoutingNumber\n        }\n      }\n      agents {\n        firstName\n        lastName\n        uuid\n      }\n      formSelectItems\n    }\n  }\n`;\n\n@observer\nclass SubmitDealFormContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      paymentAmountItems: {},\n      deductionAmountItems: {},\n      paymentsTotal: 0,\n      deductionsTotal: 0,\n      total: 0,\n      contractOrLeaseForms: [],\n      agencyDisclosureForm: null,\n      permanentPaymentSubtractions: 0, // not submitted\n      permanentDeductionSubtractions: 0, // not submitted\n      choosingMgmtCoBrokeCompany: false,\n      newMgmtOrCobrokeCompany: '',\n      hasSetNewMgmtOrCobrokeCompany: false,\n      addedManagementCompanies: [],\n      uplodingFileProgress: 0,\n      isUploadingFile: false,\n      uplodingFileText: '',\n      filesUploadedSuccessfully: null,\n      formSubmissionBegun: false,\n      submittingFormToServer: false,\n    };\n  }\n\n  uploadItemsNum = 0;\n  itemsUploaded = 0;\n\n  paymentAmountChangeHandler = (id, value) => {\n    value = Number(value);\n    const paymentsTotal = this.getTotalPaymentsAmount({\n      id,\n      value: value || 0,\n    });\n    this.setState({\n      paymentAmountItems: {\n        ...this.state.paymentAmountItems,\n        [id]: value || 0,\n      },\n      paymentsTotal,\n      total: paymentsTotal - this.state.deductionsTotal,\n    });\n  };\n\n  deductionAmountChangeHandler = (id, value) => {\n    value = Number(value);\n    const deductionsTotal = this.getTotalDeductionsAmount({\n      id,\n      value: value || 0,\n    });\n    this.setState({\n      deductionAmountItems: {\n        ...this.state.deductionAmountItems,\n        [id]: value || 0,\n      },\n      deductionsTotal,\n      total: this.state.paymentsTotal - deductionsTotal,\n    });\n  };\n\n  getTotalPaymentsAmount = newItem => {\n    let total = 0;\n    const { paymentAmountItems, permanentPaymentSubtractions } = this.state;\n\n    Object.keys(paymentAmountItems)\n      .filter(itemID => (newItem ? itemID !== newItem.id : true))\n      .forEach(key => {\n        total += paymentAmountItems[key];\n      });\n\n    if (newItem && newItem.value) total += newItem.value;\n\n    return total - permanentPaymentSubtractions;\n  };\n\n  getTotalDeductionsAmount = newItem => {\n    let total = 0;\n    const { deductionAmountItems, permanentDeductionSubtractions } = this.state;\n\n    Object.keys(deductionAmountItems)\n      .filter(itemID => (newItem ? itemID !== newItem.id : true))\n      .forEach(key => {\n        total += deductionAmountItems[key];\n      });\n\n    if (newItem && newItem.value) total += newItem.value;\n\n    return total - permanentDeductionSubtractions;\n  };\n\n  subtractPaymentValueFromState = payment => {\n    const paymentsTotal = this.getTotalPaymentsAmount() - payment;\n\n    this.setState({\n      permanentPaymentSubtractions:\n        this.state.permanentPaymentSubtractions + payment,\n      paymentsTotal,\n      total: paymentsTotal - this.state.deductionsTotal,\n    });\n  };\n\n  subtractDeductionValueFromState = deduction => {\n    const deductionsTotal = this.getTotalDeductionsAmount() - deduction;\n\n    this.setState({\n      permanentDeductionSubtractions:\n        this.state.permanentDeductionSubtractions + deduction,\n      deductionsTotal,\n      total: this.state.paymentsTotal - deductionsTotal,\n    });\n  };\n\n  setAgencyDisclosureForm = file => {\n    this.setState({ agencyDisclosureForm: file });\n  };\n\n  setContractOrLeaseForms = filesObject => {\n    if (Array.isArray(filesObject)) {\n      this.setState({ contractOrLeaseForms: filesObject });\n      if (filesObject.length === 0) {\n        const uploadBtn = document.getElementById(\n          'contractOrLeaseItemsUploadForm'\n        );\n        if (uploadBtn) {\n          uploadBtn.value = null;\n        }\n      }\n      return;\n    }\n    const fileArray = Object.keys(filesObject).map(key => filesObject[key]);\n    this.setState({ contractOrLeaseForms: fileArray });\n  };\n\n  handleMgmtOrCobrokeCompanyChange = event => {\n    this.setState({\n      newMgmtOrCobrokeCompany: event.target.value,\n    });\n  };\n\n  toggleChoosingMgmtCoBrokeCompany = bool => {\n    const { choosingMgmtCoBrokeCompany } = this.state;\n    this.setState({\n      choosingMgmtCoBrokeCompany:\n        typeof bool === 'boolean' ? bool : !choosingMgmtCoBrokeCompany,\n      newMgmtOrCobrokeCompany: '',\n    });\n  };\n\n  setHasSetNewMgmtOrCobrokeCompany = bool => {\n    const { addedManagementCompanies, newMgmtOrCobrokeCompany } = this.state;\n    this.setState({\n      choosingMgmtCoBrokeCompany: false,\n      hasSetNewMgmtOrCobrokeCompany: true,\n      newMgmtOrCobrokeCompany: '',\n      addedManagementCompanies: [\n        ...addedManagementCompanies,\n        capitalize(newMgmtOrCobrokeCompany.trim()),\n      ],\n    });\n  };\n\n  onAgentPaymentTypeChange = ({ target }) => {\n    const { value } = target;\n    const isACH = value === 'Please ACH me';\n    if (isACH) {\n      this.setState({ agentPaymentTypeIsACH: true });\n    } else {\n      this.setState({ agentPaymentTypeIsACH: false });\n    }\n  };\n\n  onSubmit = values => {\n    this.props.setFormSubmitted();\n\n    const {\n      contractOrLeaseForms,\n      agencyDisclosureForm,\n      addedManagementCompanies,\n      hasSetNewMgmtOrCobrokeCompany,\n      paymentsTotal,\n      deductionsTotal,\n      total,\n    } = this.state;\n\n    const returnObject = {\n      ...values,\n      otherAgents: values.otherAgents || [],\n      addedManagementCompanies,\n      paymentsTotal,\n      deductionsTotal,\n      total,\n      agencyDisclosureForm: null,\n      contractOrLeaseForms: [],\n      dealID: null,\n    };\n\n    delete returnObject.contractOrLeaseItems;\n    delete returnObject.deductionsSubtotal;\n    delete returnObject.paymentsSubtotal;\n    delete returnObject.financialsTotal;\n    delete returnObject.date;\n    delete returnObject.agent;\n    delete returnObject.agentType;\n    delete returnObject.state;\n    returnObject.price = Number(returnObject.price);\n    returnObject.paymentItems = returnObject.paymentItems.map(item => ({\n      ...item,\n      amount: Number(item.amount),\n    }));\n    returnObject.deductionItems = returnObject.deductionItems.map(item => ({\n      ...item,\n      amount: Number(item.amount),\n    }));\n\n    const uploadItems = [\n      {\n        itemName: 'agencyDisclosureForm',\n        fileName: agencyDisclosureForm.name,\n        fileType: agencyDisclosureForm.type,\n      },\n    ];\n\n    if (contractOrLeaseForms && contractOrLeaseForms.length) {\n      contractOrLeaseForms.forEach((file, i) => {\n        uploadItems.push({\n          itemName: `contractOrLeaseForm${i}`,\n          fileName: file.name,\n          fileType: file.type,\n        });\n      });\n    }\n\n    getDealUploadsSignedURLS(uploadItems).then(response => {\n      if (response.error) {\n        this.props.openRequestErrorSnackbar(response.error);\n        this.props.setFormSubmitted(false);\n        return;\n      }\n\n      let errors = [];\n\n      const { items, dealID } = response;\n\n      returnObject.dealID = dealID;\n\n      items.forEach(item => {\n        if (item.error) errors.push(item.error);\n      });\n\n      if (errors.length) {\n        this.props.openRequestErrorSnackbar(errors[0]);\n        this.props.setFormSubmitted(false);\n        return;\n      }\n\n      this.uploadItemsNum = items.length;\n\n      const recursiveUploads = (items, returnObject, thisRef) => {\n        const uploadItemsNum = items.length;\n        const uploadItemIndex = 0;\n        recursiveHelper(\n          items,\n          uploadItemIndex,\n          uploadItemsNum,\n          returnObject,\n          thisRef\n        );\n      };\n\n      const recursiveHelper = (\n        items,\n        uploadItemIndex,\n        uploadItemsNum,\n        returnObject,\n        thisRef\n      ) => {\n        if (uploadItemIndex >= items.length) {\n          thisRef.setState({\n            isUploadingFile: false,\n            uplodingFileProgress: 0,\n            filesUploadedSuccessfully: true,\n            submittingFormToServer: true,\n          });\n\n          submitDeal(returnObject)\n            .then(res => {\n              let failed = false;\n\n              if (res.otherError) {\n                this.props.openRequestErrorSnackbar(res.otherError);\n                failed = true;\n              }\n\n              if (res.userErrors.length) {\n                failed = true;\n              }\n\n              if (!failed) {\n                this.props.setDealSuccessfullySubmitted(res.deal);\n              }\n\n              this.setState({\n                submittingFormToServer: false,\n              });\n\n              this.props.setFormSubmitted(false);\n            })\n            .catch(err => {\n              this.setState({\n                submittingFormToServer: false,\n              });\n              this.props.setFormSubmitted(false);\n              this.props.openRequestErrorSnackbar();\n            });\n          return;\n        }\n\n        const item = items[uploadItemIndex];\n\n        let file;\n        let fileIndex;\n\n        if (item.itemName === 'agencyDisclosureForm') {\n          file = thisRef.state.agencyDisclosureForm;\n          returnObject.agencyDisclosureForm = item.fileName;\n        } else {\n          fileIndex = item.itemName.slice(-1);\n          file = thisRef.state.contractOrLeaseForms[fileIndex];\n          returnObject.contractOrLeaseForms.push(item.fileName);\n        }\n\n        uploadFile({\n          file,\n          url: item.signedURL,\n          onUploadProgress: progressEvent => {\n            // Do whatever you want with the native progress event\n            const loadedPercent =\n              (progressEvent.loaded / progressEvent.total) * 100;\n\n            thisRef.setState({\n              formSubmissionBegun: true,\n              uplodingFileProgress: Math.floor(loadedPercent),\n              uplodingFileText: `Now uploading file ${uploadItemIndex +\n                1} of ${uploadItemsNum}...`,\n              isUploadingFile: true,\n            });\n          },\n        })\n          .then(res => {\n            const status = `${res.status}`;\n            const okRegex = /^[2][0-9][0-9]$/;\n\n            if (!okRegex.test(status)) {\n              this.setState({\n                submittingFormToServer: false,\n                isUploadingFile: false,\n              });\n              this.props.setFormSubmitted(false);\n              this.props.openRequestErrorSnackbar(\n                'There was an error uploading your files. Please try again shortly.'\n              );\n              return;\n            }\n\n            return recursiveHelper(\n              items,\n              uploadItemIndex + 1,\n              uploadItemsNum,\n              returnObject,\n              thisRef\n            );\n          })\n          .catch(err => {\n            this.setState({\n              submittingFormToServer: false,\n              isUploadingFile: false,\n            });\n            this.props.setFormSubmitted(false);\n            this.props.openRequestErrorSnackbar();\n          });\n      };\n\n      recursiveUploads(items, returnObject, this);\n    });\n  };\n\n  onSubmitFailure = (errs, onSubmitError, formApi) => {\n    console.log(errs);\n    console.log(onSubmitError);\n    console.log(formApi.errors);\n  };\n\n  render() {\n    const { userUUID: uuid, ...rest } = this.props;\n    const { agencyDisclosureForm, contractOrLeaseForms } = this.state;\n\n    return (\n      <Query query={dealFormQuery} fetchPolicy=\"cache-and-network\">\n        {({ loading, error, data }) => {\n          if (loading)\n            return (\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Loader color=\"#f44336\" loading />\n              </div>\n            );\n\n          if (error) {\n            console.log(error);\n            return (\n              <div style={{ textAlign: 'center' }}>\n                We're sorry. There was an error processing your request.\n              </div>\n            );\n          }\n\n          const { agent, agents, formSelectItems } = data.dealForm;\n\n          return (\n            <SubmitDealForm\n              paymentsTotal={`${this.state.paymentsTotal}`}\n              deductionsTotal={`${this.state.deductionsTotal}`}\n              total={this.state.total}\n              agent={agent}\n              agents={agents.filter(agent => agent.uuid !== uuid)}\n              managementCobrokeCompanyItems={formSelectItems || []}\n              onSubmit={this.onSubmit}\n              setAgencyDisclosureForm={this.setAgencyDisclosureForm}\n              setContractOrLeaseForms={this.setContractOrLeaseForms}\n              agencyDisclosureForm={agencyDisclosureForm}\n              contractOrLeaseForms={contractOrLeaseForms}\n              paymentAmountChangeHandler={this.paymentAmountChangeHandler}\n              addedManagementCompanies={this.state.addedManagementCompanies}\n              newMgmtOrCobrokeCompany={this.state.newMgmtOrCobrokeCompany}\n              uplodingFileProgress={this.state.uplodingFileProgress}\n              isUploadingFile={this.state.isUploadingFile}\n              uplodingFileText={this.state.uplodingFileText}\n              formSubmissionBegun={this.state.formSubmissionBegun}\n              submittingFormToServer={this.state.submittingFormToServer}\n              setHasSetNewMgmtOrCobrokeCompany={\n                this.setHasSetNewMgmtOrCobrokeCompany\n              }\n              toggleChoosingMgmtCoBrokeCompany={\n                this.toggleChoosingMgmtCoBrokeCompany\n              }\n              handleMgmtOrCobrokeCompanyChange={\n                this.handleMgmtOrCobrokeCompanyChange\n              }\n              choosingMgmtCoBrokeCompany={this.state.choosingMgmtCoBrokeCompany}\n              deductionAmountChangeHandler={this.deductionAmountChangeHandler}\n              subtractPaymentValueFromState={this.subtractPaymentValueFromState}\n              subtractDeductionValueFromState={\n                this.subtractDeductionValueFromState\n              }\n              agentPaymentTypeIsACH={this.state.agentPaymentTypeIsACH}\n              onAgentPaymentTypeChange={this.onAgentPaymentTypeChange}\n              {...rest}\n            />\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default SubmitDealFormContainer;\n\n\n\n// WEBPACK FOOTER //\n// src/containers/SubmitDealForm.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAwBA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AACA;AAIA;AACA;AANA;AAQA;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6CA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AACA;AAIA;AACA;AANA;AAQA;AA1DA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6DA;AADA;AAAA;AAAA;AAIA;AACA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AAzEA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4EA;AADA;AAAA;AAAA;AAIA;AACA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AAxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2FA;AACA;AACA;AACA;AAEA;AACA;AAJA;AAMA;AAnGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsGA;AACA;AACA;AACA;AAEA;AACA;AAJA;AAMA;AA9GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiHA;AAAA;AAAA;AACA;AAlHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqHA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAnIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsIA;AACA;AADA;AAGA;AAzIA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2IA;AACA;AACA;AACA;AAEA;AAHA;AAKA;AAlJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoJA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AASA;AA/JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiKA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAzKA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4KA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAFA;AAAA;AAIA;AAAA;AAEA;AAFA;AAAA;AAKA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAPA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AAEA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AALA;AAOA;AAfA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AACA;AAFA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAhYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmYA;AACA;AACA;AACA;AAtYA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAFA;AAuBA;AACA;;;AAgXA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAhBA;AAAA;AAAA;AAAA;AAmBA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAGA;AACA;AACA;AACA;AAGA;AACA;AApCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwCA;AAGA;;;;;;;;;;;AA9cA;AACA;AAgdA;AAAA;;;;;;;;;;;;AA5eA;AAEA;AAyBA;;;;;;;;;;A","sourceRoot":""}