{"version":3,"file":"6.84580c14096a9baf165b.hot-update.js","sources":["webpack:///src/components/AdminAreaAgentsTable/index.js","webpack:///src/components/dataTableFormatters/AreaOfFocusFormatter.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from 'material-ui/styles';\nimport withSizes from 'react-sizes';\nimport isBrowser from 'is-browser';\nimport {\n  SortingState,\n  FilteringState,\n  SearchState,\n  IntegratedFiltering,\n  IntegratedSorting,\n  PagingState,\n  IntegratedPaging,\n  DataTypeProvider,\n} from '@devexpress/dx-react-grid';\nimport {\n  Grid,\n  VirtualTable,\n  TableHeaderRow,\n  TableFilterRow,\n  TableColumnResizing,\n  DragDropProvider,\n  TableColumnReordering,\n  Toolbar,\n  SearchPanel,\n  PagingPanel,\n  TableColumnVisibility,\n  ColumnChooser,\n} from '@devexpress/dx-react-grid-material-ui';\nimport Cell from '../../utils/backEndTableUtils/DefaultVirtualTableCell';\nimport TableComponent from '../../utils/backEndTableUtils/TableComponent';\nimport TableContainerComponent from '../../utils/backEndTableUtils/TableContainerComponent';\nimport NoDataCellComponent from '../../utils/backEndTableUtils/NoDataCellComponent';\nimport ProfilePictureFormatter from '../dataTableFormatters/ProfilePictureFormatter';\nimport ViewFormatter from '../dataTableFormatters/ViewFormatter';\nimport AreaOfFocusFormatter from '../dataTableFormatters/AreaOfFocusFormatter';\n\nconst styles = theme => ({\n  root: {\n    boxShadow: theme.shadows[1],\n    backgroundColor: '#fff',\n    borderRadius: '3px',\n    '& [class^=\"Pager-pager-\"]': {\n      borderTop: '1px solid rgba(224, 224, 224, 1)',\n    },\n  },\n  cell: {\n    width: '100%',\n    paddingLeft: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n  },\n  input: {\n    width: '100%',\n  },\n  myTable: {},\n  myTableContainer: {\n    minHeight: '300px',\n    height: 'calc(100vh - 310px) !important',\n    // maxHeight: '800px',\n  },\n  myNoDataCellComponent: {\n    borderBottom: 'none !important',\n  },\n});\n\nconst sortingStateColumnExtensions = [\n  { columnName: 'photo', sortingEnabled: false },\n  { columnName: 'view', sortingEnabled: false },\n];\n\nconst filteringStateColumnExtensions = [\n  { columnName: 'photo', filteringEnabled: false },\n  { columnName: 'view', filteringEnabled: false },\n];\n\nconst getRowId = row => row.email;\n\nconst FilterCell = props => <TableFilterRow.Cell {...props} />;\n\nconst defaultColumnWidths = [\n  { columnName: 'agentID', width: 120 },\n  { columnName: 'realEstateLicenseNumber', width: 140 },\n  { columnName: 'photo', width: 95 },\n  { columnName: 'name', width: 150 },\n  { columnName: 'email', width: 160 },\n  { columnName: 'areaOfFocus', width: 150 },\n  { columnName: 'mobileNumber', width: 150 },\n  { columnName: 'companyNumberAndExt', width: 180 },\n  { columnName: 'branch', width: 140 },\n  { columnName: 'state', width: 150 },\n  { columnName: 'lastLoginTimestamp', width: 180 },\n  { columnName: 'createdAt', width: 180 },\n  { columnName: 'view', width: 120 },\n];\n\nconst defaultHiddenColumnNames = [\n  'lastLoginTimestamp',\n  'state',\n  'agentID',\n  'createdAt',\n];\n\nconst pageSizes = [5, 10, 15, 20, 50, 100, 0];\n\nconst mapSizesToProps = ({ width }) => ({\n  xsViewport: width < 412,\n  smViewport: width < 600,\n  mdViewport: width < 960,\n  lgViewport: width < 1280,\n});\n\nconst PhotoFormatter = ({ value }) => <ProfilePictureFormatter value={value} />;\n\nconst PhotoTypeProvider = props => (\n  <DataTypeProvider formatterComponent={PhotoFormatter} {...props} />\n);\n\nconst ViewCellFormatter = ({ value }) => <ViewFormatter value={value} />;\n\nconst ViewTypeProvider = props => (\n  <DataTypeProvider formatterComponent={ViewCellFormatter} {...props} />\n);\n\nconst AreaOfFocusCellFormatter = ({ value }) => (\n  <AreaOfFocusFormatter value={value} />\n);\n\nconst AreaOfFocusTypeProvider = props => (\n  <DataTypeProvider formatterComponent={AreaOfFocusCellFormatter} {...props} />\n);\n\nconst TableContainerComponentWrapperBase = ({ classes, ...restProps }) => (\n  <TableContainerComponent\n    {...restProps}\n    className={classes.myTableContainer}\n  />\n);\n\nconst TableContainerComponentWrapper = withStyles(styles)(\n  TableContainerComponentWrapperBase\n);\n\n@withStyles(styles)\n@withSizes(mapSizesToProps)\nclass AdminAreaAgentsTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pageSize: 10,\n      currentPage: 0,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.onMount) this.props.onMount();\n  }\n\n  changePageSize = pageSize => {\n    this.setState({ pageSize });\n    if (this.state.pageSize < pageSize) {\n      document.getElementById('myTableContainer').scrollTop = 0;\n    }\n  };\n\n  currentPageChange = currentPage => {\n    this.setState({ currentPage });\n    document.getElementById('myTableContainer').scrollTop = 0;\n  };\n\n  render() {\n    const { classes, columns, rows, lgViewport } = this.props;\n    return (\n      <div className={classes.root}>\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\n          <PhotoTypeProvider for={['photo']} />\n          <ViewTypeProvider for={['view']} />\n          <AreaOfFocusTypeProvider for={['areaOfFocus']} />\n\n          <DragDropProvider />\n          <SearchState />\n          <FilteringState columnExtensions={filteringStateColumnExtensions} />\n          <SortingState\n            defaultSorting={[{ columnName: 'name', direction: 'asc' }]}\n            columnExtensions={sortingStateColumnExtensions}\n          />\n          <PagingState\n            currentPage={this.state.currentPage}\n            pageSize={this.state.pageSize}\n            onPageSizeChange={this.changePageSize}\n            onCurrentPageChange={this.currentPageChange}\n          />\n\n          <IntegratedFiltering />\n\n          <IntegratedSorting />\n\n          <IntegratedPaging />\n\n          <VirtualTable\n            height={isBrowser ? window.innerHeight - 310 : undefined}\n            tableComponent={TableComponent}\n            containerComponent={props => (\n              <TableContainerComponent\n                className={\n                  lgViewport\n                    ? classes.myTableContainerSmallViewPort\n                    : classes.myTableContainer\n                }\n                {...props}\n              />\n            )}\n            cellComponent={Cell}\n            noDataCellComponent={NoDataCellComponent}\n          />\n          <TableColumnReordering\n            defaultOrder={columns.map(column => column.name)}\n          />\n          <TableColumnResizing defaultColumnWidths={defaultColumnWidths} />\n\n          <TableFilterRow cellComponent={FilterCell} />\n          <Toolbar />\n          <SearchPanel />\n\n          <TableColumnVisibility\n            defaultHiddenColumnNames={defaultHiddenColumnNames}\n          />\n\n          <ColumnChooser />\n          <TableHeaderRow showSortingControls />\n          <PagingPanel pageSizes={pageSizes} />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default AdminAreaAgentsTable;\n\n\n\n// WEBPACK FOOTER //\n// src/components/AdminAreaAgentsTable/index.js","import React from 'react';\nimport { withStyles } from 'material-ui/styles';\nimport { observer } from 'mobx-react';\nimport EyeIcon from '@material-ui/icons/RemoveRedEye';\nimport Tooltip from 'material-ui/Tooltip';\nimport { Link } from '../../routes';\n\nconst styles = theme => ({\n  wrapper: {\n    width: '90%',\n    height: '90%',\n    boxSizing: 'border-box',\n    textAlign: 'center',\n    color: '#00C853',\n    cursor: 'pointer',\n  },\n});\n\n@observer\nclass VeiwFormatter extends React.Component {\n  render() {\n    const { classes, values } = this.props;\n\n    return <div>{values.join(', ')}</div>;\n  }\n}\n\nexport default withStyles(styles)(VeiwFormatter);\n\n\n\n// WEBPACK FOOTER //\n// src/components/dataTableFormatters/AreaOfFocusFormatter.js"],"mappings":"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","sourceRoot":""}