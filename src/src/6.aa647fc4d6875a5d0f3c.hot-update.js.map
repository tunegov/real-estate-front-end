{"version":3,"file":"6.aa647fc4d6875a5d0f3c.hot-update.js","sources":["webpack:///src/containers/AgentsTable.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from 'material-ui/styles';\nimport Chance from 'chance';\nimport faker from 'faker';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { DotLoader } from 'react-spinners';\nimport AgentsTable from '../components/AgentsTable';\nimport { capitalize } from '../utils/stringUtils';\n\nconst chance = new Chance();\n\nconst Loader = DotLoader;\n\nconst agentsQuery = gql`\n  query agents {\n    agents {\n      uuid\n      firstName\n      lastName\n      email\n      role\n      agent {\n        profilePicURL\n        branch\n        mobileNumber\n        officeNumber\n        areaOfFocus\n      }\n    }\n  }\n`;\n\nconst styles = theme => ({\n  root: {\n    position: 'relative',\n  },\n  progress: {\n    margin: theme.spacing.unit * 2,\n    marginRight: 'auto',\n    marginLeft: 'auto',\n    display: 'block',\n  },\n  progressWrapper: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    padding: '60px 20px',\n    borderRadius: '3px',\n    backgroundColor: '#fff',\n    zIndex: 2,\n  },\n});\n\nconst columns = [\n  { name: 'agentID', title: 'Agent ID' },\n  { name: 'photo', title: 'Photo' },\n  { name: 'name', title: 'Name' },\n  { name: 'email', title: 'Email' },\n  { name: 'areaOfFocus', title: 'Area of Focus' },\n  { name: 'mobileNumber', title: 'Mobile Number' },\n  { name: 'companyNumberAndExt', title: 'Company Number/Extension' },\n  { name: 'branch', title: 'Branch' },\n  { name: 'view', title: 'View Profile' },\n];\n\n@observer\nclass AgentsTableContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableIsLoading: true,\n    };\n  }\n\n  createRows = agents => {\n    const rows = [];\n    agents.forEach(agent => {\n      const {\n        agent: agentPart,\n        firstName,\n        lastName,\n        email,\n        uuid,\n        lastLoginTimestamp,\n      } = agent;\n      const {\n        areaOfFocus,\n        state,\n        realEstateLicenseNumber,\n        profilePicURL,\n        officeNumber,\n        mobileNumber,\n        branch,\n      } = agentPart;\n      rows.push({\n        agentID: uuid,\n        realEstateLicenseNumber: realEstateLicenseNumber,\n        photo: {\n          imageURL: profilePicURL,\n          id: uuid,\n        },\n        name: capitalize(`${firstName} ${lastName}`),\n        email,\n        areaOfFocus: areaOfFocus,\n        mobileNumber,\n        companyNumberAndExt: officeNumber,\n        branch,\n        state,\n        lastLoginTimestamp: lastLoginTimestamp\n          ? moment(lastLoginTimestamp).format('MM/DD/YYYY, h:mm:ss a')\n          : '',\n        view: {\n          route: 'profile',\n          id: uuid,\n        },\n      });\n    });\n    return rows;\n  };\n\n  render() {\n    const { tableIsLoading, rows } = this.state;\n    const { classes, ...rest } = this.props;\n    return (\n      <Query query={agentsQuery} ssr={false} fetchPolicy=\"cache-and-network\">\n        {({ loading, error, data }) => {\n          console.log(data);\n          if (loading)\n            return (\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  height: 'calc(100vh - 110px)',\n                  boxShadow:\n                    '0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12)',\n                }}\n              >\n                <Loader color=\"#f44336\" loading />\n              </div>\n            );\n          // TODO: change the error message to a generic\n          // 'error connecting to server' message\n          if (error) {\n            console.log(error);\n            return (\n              <div style={{ textAlign: 'center' }}>\n                We're sorry. There was an error processing your request.\n              </div>\n            );\n          }\n\n          return (\n            <div className={classes.root}>\n              {tableIsLoading ? (\n                <div\n                  className={classes.progressWrapper}\n                  style={{ display: 'flex', justifyContent: 'center' }}\n                >\n                  <Loader color=\"#f44336\" loading />\n                </div>\n              ) : null}\n              <AgentsTable\n                {...rest}\n                onMount={() =>\n                  tableIsLoading\n                    ? this.setState({ tableIsLoading: false })\n                    : null\n                }\n                columns={columns}\n                rows={this.createRows(data.agents)}\n              />\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withStyles(styles)(AgentsTableContainer);\n\n\n\n// WEBPACK FOOTER //\n// src/containers/AgentsTable.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAkBA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAVA;AAAA;AACA;AA0BA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAFA;AAjBA;AAsBA;AACA;AACA;AAnDA;AAEA;AACA;AADA;AAFA;AAKA;AACA;;;AA+CA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAEA;AAAA;AAFA;AAKA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAYA;AAGA;;;;;;;;;;;AAhHA;AACA;AAkHA;AACA;AADA;;;;;;;;;;;;AAlLA;AAEA;AAEA;AAmBA;AA2BA;AAaA;;;;;;;;;;A","sourceRoot":""}