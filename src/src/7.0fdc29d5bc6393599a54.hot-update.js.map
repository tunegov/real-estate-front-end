{"version":3,"file":"7.0fdc29d5bc6393599a54.hot-update.js","sources":["webpack:///src/components/forms/EditProfilePicForm/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Form } from 'react-form';\nimport uuid from 'uuid/v4';\nimport AvatarEditor from 'react-avatar-editor';\nimport { withStyles } from 'material-ui/styles';\nimport Grid from 'material-ui/Grid';\nimport withSizes from 'react-sizes';\nimport Button from 'material-ui/Button';\nimport { Icon } from 'antd';\nimport Typography from 'material-ui/Typography';\nimport CircularProgressbar from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport Slider from '../../CustomSlider';\nimport validators from './formValidation';\nimport CustomFileUploadInputBtn from '../../CustomFileUploadInputWrapper';\nimport MaterialCustomTextFieldWrapper from '../../MaterialCustomTextFieldWrapper';\nimport MaterialCustomRadioInputWrapper from '../../MaterialCustomRadioInputWrapper';\nimport MaterialCustomSelectInputWrapper from '../../MaterialCustomSelectInputWrapper';\nimport { states } from '../../../utils/constants';\n\nconst CustomTextField = MaterialCustomTextFieldWrapper;\nconst MaterialCustomRadioInput = MaterialCustomRadioInputWrapper;\nconst MaterialCustomSelectInput = MaterialCustomSelectInputWrapper;\n\nconst acceptedFileExtensions = ['jpg', 'jpeg'];\n\nconst mapSizesToProps = ({ width }) => ({\n  smViewport: width < 600,\n  mdViewport: width < 960,\n  lgViewport: width < 1280,\n});\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    padding: '30px 40px',\n    [theme.breakpoints.down('md')]: {\n      padding: '30px 0',\n    },\n    backgroundColor: '#fff',\n  },\n  formRoot: {\n    maxWidth: '100%',\n  },\n  formControlWrapper: {\n    paddingLeft: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n  },\n  uploadBtnClassName: {\n    display: 'inline-block',\n    marginTop: '20px',\n    color: '#fff',\n    backgroundColor: '#272A2E',\n    boxShadow:\n      '0px 1px 5px 0px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 3px 1px -2px rgba(0, 0, 0, 0.12)',\n    padding: '8px 16px',\n    minWidth: '88px',\n    fontSize: '0.875rem',\n    boxSizing: 'border-box',\n    minHeight: '36px',\n    transition:\n      'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    lineHeight: '1.4em',\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: '500',\n    borderRadius: '2px',\n    textTransform: 'uppercase',\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: '#000',\n    },\n  },\n  profileItemsWrapper: {\n    //display: 'inline-block',\n    textAlign: 'center',\n  },\n  sliderWrapper: {\n    width: '100%',\n  },\n  formSubheading: {\n    width: '100%',\n    textAlign: 'center',\n    paddingLeft: '16px',\n    paddingTop: '82px',\n  },\n  h3: {\n    fontWeight: theme.typography.fontWeightMedium,\n  },\n  formMiniHeading: {\n    width: '100%',\n    textAlign: 'left',\n    paddingLeft: '28px',\n  },\n  formMiniHeading2: {\n    width: '100%',\n    textAlign: 'left',\n    paddingLeft: '28px',\n    marginTop: '60px',\n  },\n  sliderRoot: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    color: 'rgba(0,0,0,.6)',\n    marginTop: '15px',\n    fontFamily: theme.typography.fontFamily,\n  },\n  sliderInput: {\n    appearance: 'none',\n    width: '30%',\n    height: '3px',\n    background: '#d3d3d3',\n    outline: 'none',\n    opacity: '0.7',\n    transition: 'opacity .2s',\n    borderRadius: '50px',\n    cursor: 'grab',\n    '&:hover': {\n      opacity: '1',\n    },\n    [theme.breakpoints.down('xs')]: {\n      width: '50%',\n    },\n  },\n  sliderLabel: {\n    marginBottom: '5px',\n    marginRight: 'none',\n  },\n  radioInputWrapper: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  confirmImgBtn: {\n    marginLeft: '5px',\n    backgroundColor: '#096DF0',\n    transition:\n      'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    '&:hover': {\n      backgroundColor: '#0950f0',\n    },\n  },\n  setImageWrapper: {\n    height: 350,\n    width: 350,\n    maxWidth: '100%',\n    maxHeight: '100%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: '20px',\n  },\n  setImage: {\n    height: '100%',\n    maxWidth: '100%',\n    width: 'auto',\n    objectFit: 'contain',\n  },\n  progressBarWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  },\n  progressBar: {\n    width: '25%',\n  },\n  progressBarExplanation: {\n    marginTop: '20px',\n    fontSize: '1.1rem',\n  },\n  formSubmittingWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  },\n});\n\nconst radioInputAgentItems = [\n  { label: '60%' },\n  { label: '70%' },\n  { label: '80%' },\n];\n\nconst areaOfFocusSelectItems = [\n  { label: '' },\n  { label: 'Residential Rentals' },\n  { label: 'Residential Sales' },\n  { label: 'Commercial Rentals' },\n  { label: 'Commercial Sales' },\n];\n\nconst branchSelectItems = [{ label: 'New York City' }];\nconst stateSelectItems = states.map(state => ({ label: state }));\n\n@withSizes(mapSizesToProps)\nclass EditProfilePicForm extends Component {\n  render() {\n    const {\n      classes,\n      setImageFile,\n      imageFile,\n      lgViewport,\n      setImageScale,\n      imageScale,\n      adjustedImageScale,\n      clearImageFile,\n      getFileUploadInput,\n      getProfilePicEditor,\n      imageFileConfirmed,\n      confirmImageFile,\n      confirmedImageDataURL,\n      loadingSetImg,\n      setFinishedLoadingImg,\n      uplodingImageProgress,\n      formSubmitedSuccessfully,\n      isUploadingImage,\n      onSubmit,\n    } = this.props;\n\n    return (\n      <div className={classes.root}>\n        {!formSubmitedSuccessfully && (\n          <Form\n            preValidate={this.preValidate}\n            onSubmit={onSubmit}\n            onSubmitFailure={this.props.onSubmitFailure}\n            validate={validators}\n            getApi={this.props.getFormApi}\n          >\n            {formApi => {\n              return (\n                <form\n                  onSubmit={formApi.submitForm}\n                  id=\"form1\"\n                  className={classes.formRoot}\n                >\n                  <Grid container>\n                    <Grid item xs={12}>\n                      <div className={classes.profileItemsWrapper}>\n                        {(imageFile && !imageFileConfirmed) || loadingSetImg ? (\n                          <AvatarEditor\n                            ref={getProfilePicEditor}\n                            image={imageFile || null}\n                            width={lgViewport ? 200 : 250}\n                            height={lgViewport ? 200 : 250}\n                            border={50}\n                            color={[0, 0, 0, 0.3]}\n                            scale={adjustedImageScale || 1.2}\n                            rotate={0}\n                            style={{\n                              maxWidth: '100%',\n                              boxShadow:\n                                '0px 1px 5px 0px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 3px 1px -2px rgba(0, 0, 0, 0.12)',\n                              display: 'block',\n                              marginLeft: 'auto',\n                              marginRight: 'auto',\n                            }}\n                          />\n                        ) : null}\n                        {(imageFile && !imageFileConfirmed) || loadingSetImg ? (\n                          <div className={classes.sliderWrapper}>\n                            <Slider\n                              value={imageScale}\n                              min={0}\n                              max={100}\n                              onChange={value => setImageScale(value)}\n                              label=\"Scale:\"\n                              rootClassName={classes.sliderRoot}\n                              labelClassName={classes.sliderLabel}\n                              inputClassName={classes.sliderInput}\n                            />\n                          </div>\n                        ) : null}\n                        <div\n                          className={classes.setImageWrapper}\n                          style={{\n                            display:\n                              !imageFile ||\n                              !confirmedImageDataURL ||\n                              loadingSetImg\n                                ? 'none'\n                                : undefined,\n                          }}\n                        >\n                          <img\n                            className={classes.setImage}\n                            src={confirmedImageDataURL}\n                            onLoad={setFinishedLoadingImg}\n                            alt=\"profile pic\"\n                          />\n                        </div>\n                        <div>\n                          {!imageFileConfirmed || loadingSetImg ? (\n                            <CustomFileUploadInputBtn\n                              field=\"profilePicture\"\n                              id={uuid()}\n                              label=\"Upload Agent's Profile Picture\"\n                              btnClassName={classes.uploadBtnClassName}\n                              required\n                              customOnChange={setImageFile}\n                              customState={imageFile}\n                              helperInfo=\"Agent's Profile (JPEG/JPG file)\"\n                              acceptedFileExtensions={acceptedFileExtensions}\n                              getInput={getFileUploadInput}\n                              accept=\".jpg, .jpeg, .png\"\n                            />\n                          ) : null}\n                          <div>\n                            {imageFile ? (\n                              <Button\n                                classes={{ root: classes.removePaymentBtn }}\n                                variant=\"raised\"\n                                color=\"secondary\"\n                                onClick={() => clearImageFile()}\n                                type=\"button\"\n                              >\n                                Clear File\n                              </Button>\n                            ) : null}\n                            {(imageFile && !imageFileConfirmed) ||\n                            loadingSetImg ? (\n                              <Button\n                                classes={{ root: classes.confirmImgBtn }}\n                                variant=\"raised\"\n                                color=\"primary\"\n                                onClick={() => confirmImageFile()}\n                                type=\"button\"\n                              >\n                                Confirm File{' '}\n                                {loadingSetImg ? (\n                                  <Icon\n                                    type=\"loading\"\n                                    style={{ color: '#fff' }}\n                                  />\n                                ) : null}\n                              </Button>\n                            ) : null}\n                          </div>\n                        </div>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </form>\n              );\n            }}\n          </Form>\n        )}\n\n        {uplodingImageProgress /*&& isUploadingImage */ ? (\n          <div className={classes.progressBarWrapper}>\n            <CircularProgressbar\n              className={classes.progressBar}\n              percentage={uplodingImageProgress}\n              styles={{\n                path: {\n                  stroke: `rgba(62, 152, 199, ${uplodingImageProgress / 100})`,\n                },\n              }}\n            />\n            <div className={classes.progressBarExplanation}>\n              Uploading profile picture...\n            </div>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(EditProfilePicForm);\n\n\n\n// WEBPACK FOOTER //\n// src/components/forms/EditProfilePicForm/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAKA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AADA;AAKA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AApBA;AAwBA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAVA;AAcA;AADA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AA/IA;AAAA;AACA;AAuJA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AANA;AATA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAcA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AADA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;AA3KA;AACA;AA6KA;AACA;AADA;;;;;;;;;;;;AApWA;AACA;AACA;AAEA;AAEA;AAMA;AAwJA;AAMA;AAQA;AACA;AAGA;;;;;;;;;;A","sourceRoot":""}