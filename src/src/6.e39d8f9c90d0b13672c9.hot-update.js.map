{"version":3,"file":"6.e39d8f9c90d0b13672c9.hot-update.js","sources":["webpack:///src/components/SideNavLinkItem/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from 'material-ui/styles';\nimport { Link } from '../../routes';\nimport {\n  SideNavLinkItemWrapper,\n  SideNavLinkItemAnchor,\n  IconWrapper,\n  SideNavLinkItemDiv,\n} from './styledComponents';\n\nconst styles = theme => ({\n  icon: {\n    color: 'inherit !important',\n  },\n});\n\n@observer\nclass SideNavLinkItem extends Component {\n  render() {\n    const {\n      onClick,\n      iconFontSize,\n      icon: Icon,\n      isActionItem,\n      isAdminLinks,\n      classes,\n      iconLeft,\n      iconLeftSmall,\n      ...rest\n    } = this.props;\n    let active;\n\n    if (this.props.currentPath.split('/')[2] === this.props.route) {\n      active = true;\n    } else {\n      active = false;\n    }\n\n    const linkItem = (\n      <SideNavLinkItemWrapper\n        active={active}\n        onClick={onClick}\n        isAdminLinks={isAdminLinks}\n        {...rest}\n      >\n        <Link route={this.props.route} prefetch>\n          <SideNavLinkItemAnchor isAdminLinks={isAdminLinks}>\n            <IconWrapper\n              isAdminLinks={isAdminLinks}\n              iconLeft={iconLeft}\n              iconLeftSmall={iconLeftSmall}\n            >\n              {Icon ? (\n                <Icon\n                  size={iconFontSize || 22}\n                  classes={{ root: classes.icon }}\n                  color=\"primary\"\n                />\n              ) : null}\n            </IconWrapper>\n            {this.props.name}\n          </SideNavLinkItemAnchor>\n        </Link>\n      </SideNavLinkItemWrapper>\n    );\n\n    const actionItem = (\n      <SideNavLinkItemWrapper\n        active={active}\n        onClick={onClick}\n        isAdminLinks={isAdminLinks}\n        {...rest}\n      >\n        <SideNavLinkItemDiv isAdminLinks={isAdminLinks}>\n          <IconWrapper isAdminLinks={isAdminLinks}>\n            {Icon ? (\n              <Icon\n                size={iconFontSize || 22}\n                color=\"primary\"\n                classes={{ root: classes.icon }}\n              />\n            ) : null}\n          </IconWrapper>\n          {this.props.name}\n        </SideNavLinkItemDiv>\n      </SideNavLinkItemWrapper>\n    );\n\n    if (isActionItem) {\n      return actionItem;\n    }\n    return linkItem;\n  }\n}\n\nexport default withStyles(styles)(SideNavLinkItem);\n\n\n\n// WEBPACK FOOTER //\n// src/components/SideNavLinkItem/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AACA;AACA;AADA;AADA;AAAA;AACA;AAMA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAaA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;AA3EA;AACA;AA6EA;AACA;AADA;;;;;;;;;;;;AArFA;AAOA;;;;;;;;;;A","sourceRoot":""}